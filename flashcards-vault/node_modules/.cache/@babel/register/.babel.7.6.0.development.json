{
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express, { json } from 'express';\nimport correlationMiddleware from 'middleware/correlationMiddleware';\nimport authorisationMiddleware from 'middleware/authorisationMiddleware';\nimport { routes } from 'routes';\nimport logger from 'logging/logger';\nimport requestLogger from 'logging/requestLogger';\nconst port = 4000;\nexpress().use(requestLogger).use(json()).use(correlationMiddleware).get('/healthcheck', (_, response) => response.send()).use(authorisationMiddleware).use('/v1', routes).listen(port, '0.0.0.0', err => {\n  if (err) {\n    logger.error(err);\n    return;\n  }\n\n  logger.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwianNvbiIsImNvcnJlbGF0aW9uTWlkZGxld2FyZSIsImF1dGhvcmlzYXRpb25NaWRkbGV3YXJlIiwicm91dGVzIiwibG9nZ2VyIiwicmVxdWVzdExvZ2dlciIsInBvcnQiLCJ1c2UiLCJnZXQiLCJfIiwicmVzcG9uc2UiLCJzZW5kIiwibGlzdGVuIiwiZXJyIiwiZXJyb3IiLCJpbmZvIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLElBQWtCQyxJQUFsQixRQUE4QixTQUE5QjtBQUNBLE9BQU9DLHFCQUFQLE1BQWtDLGtDQUFsQztBQUNBLE9BQU9DLHVCQUFQLE1BQW9DLG9DQUFwQztBQUNBLFNBQVNDLE1BQVQsUUFBdUIsUUFBdkI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGdCQUFuQjtBQUNBLE9BQU9DLGFBQVAsTUFBMEIsdUJBQTFCO0FBRUEsTUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQVAsT0FBTyxHQUNKUSxHQURILENBQ09GLGFBRFAsRUFFR0UsR0FGSCxDQUVPUCxJQUFJLEVBRlgsRUFHR08sR0FISCxDQUdPTixxQkFIUCxFQUlHTyxHQUpILENBSU8sY0FKUCxFQUl1QixDQUFDQyxDQUFELEVBQUlDLFFBQUosS0FBaUJBLFFBQVEsQ0FBQ0MsSUFBVCxFQUp4QyxFQUtHSixHQUxILENBS09MLHVCQUxQLEVBTUdLLEdBTkgsQ0FNTyxLQU5QLEVBTWNKLE1BTmQsRUFPR1MsTUFQSCxDQU9VTixJQVBWLEVBT2dCLFNBUGhCLEVBTzRCTyxHQUFELElBQVM7QUFDaEMsTUFBSUEsR0FBSixFQUFTO0FBQ1BULElBQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhRCxHQUFiO0FBQ0E7QUFDRDs7QUFDRFQsRUFBQUEsTUFBTSxDQUFDVyxJQUFQLENBQWEsOEJBQTZCVCxJQUFLLEdBQS9DO0FBQ0QsQ0FiSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IGpzb24gfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnJlbGF0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2NvcnJlbGF0aW9uTWlkZGxld2FyZSdcbmltcG9ydCBhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2F1dGhvcmlzYXRpb25NaWRkbGV3YXJlJ1xuaW1wb3J0IHsgcm91dGVzIH0gZnJvbSAncm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICdsb2dnaW5nL2xvZ2dlcidcbmltcG9ydCByZXF1ZXN0TG9nZ2VyIGZyb20gJ2xvZ2dpbmcvcmVxdWVzdExvZ2dlcidcblxuY29uc3QgcG9ydCA9IDQwMDBcblxuZXhwcmVzcygpXG4gIC51c2UocmVxdWVzdExvZ2dlcilcbiAgLnVzZShqc29uKCkpXG4gIC51c2UoY29ycmVsYXRpb25NaWRkbGV3YXJlKVxuICAuZ2V0KCcvaGVhbHRoY2hlY2snLCAoXywgcmVzcG9uc2UpID0+IHJlc3BvbnNlLnNlbmQoKSlcbiAgLnVzZShhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSlcbiAgLnVzZSgnL3YxJywgcm91dGVzKVxuICAubGlzdGVuKHBvcnQsICcwLjAuMC4wJywgKGVycikgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGxvZ2dlci5lcnJvcihlcnIpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgbG9nZ2VyLmluZm8oYFN0YXJ0ZWQuIExpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0uYClcbiAgfSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "json",
        "correlationMiddleware",
        "authorisationMiddleware",
        "routes",
        "logger",
        "requestLogger",
        "port",
        "use",
        "get",
        "_",
        "response",
        "send",
        "listen",
        "err",
        "error",
        "info"
      ],
      "mappings": "AAAA,OAAOA,OAAP,IAAkBC,IAAlB,QAA8B,SAA9B;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,IAAI,GAAG,IAAb;AAEAP,OAAO,GACJQ,GADH,CACOF,aADP,EAEGE,GAFH,CAEOP,IAAI,EAFX,EAGGO,GAHH,CAGON,qBAHP,EAIGO,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGJ,GALH,CAKOL,uBALP,EAMGK,GANH,CAMO,KANP,EAMcJ,MANd,EAOGS,MAPH,CAOUN,IAPV,EAOgB,SAPhB,EAO4BO,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPT,IAAAA,MAAM,CAACU,KAAP,CAAaD,GAAb;AACA;AACD;;AACDT,EAAAA,MAAM,CAACW,IAAP,CAAa,8BAA6BT,IAAK,GAA/C;AACD,CAbH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport correlationMiddleware from 'middleware/correlationMiddleware'\nimport authorisationMiddleware from 'middleware/authorisationMiddleware'\nimport { routes } from 'routes'\nimport logger from 'logging/logger'\nimport requestLogger from 'logging/requestLogger'\n\nconst port = 4000\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(correlationMiddleware)\n  .get('/healthcheck', (_, response) => response.send())\n  .use(authorisationMiddleware)\n  .use('/v1', routes)\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567886040000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _logger = _interopRequireDefault(require(\"./logging/logger\"));\n\nvar _requestLogger = _interopRequireDefault(require(\"./logging/requestLogger\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst port = process.env.PORT || 8080;\n(0, _express.default)().use(_requestLogger.default).use((0, _express.json)()).use((0, _cors.default)()).get('/healthcheck', (_, response) => response.send()).use('/v1', _routes.default).get('/', (req, res) => {\n  res.send('Hiiiiiiiiiiii');\n}).listen(port, '0.0.0.0', err => {\n  if (err) {\n    _logger.default.error(err);\n\n    return;\n  }\n\n  _logger.default.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJyZXF1ZXN0TG9nZ2VyIiwiZ2V0IiwiXyIsInJlc3BvbnNlIiwic2VuZCIsInJvdXRlcyIsInJlcSIsInJlcyIsImxpc3RlbiIsImVyciIsImxvZ2dlciIsImVycm9yIiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUEsd0JBQ0dDLEdBREgsQ0FDT0Msc0JBRFAsRUFFR0QsR0FGSCxDQUVPLG9CQUZQLEVBR0dBLEdBSEgsQ0FHTyxvQkFIUCxFQUlHRSxHQUpILENBSU8sY0FKUCxFQUl1QixDQUFDQyxDQUFELEVBQUlDLFFBQUosS0FBaUJBLFFBQVEsQ0FBQ0MsSUFBVCxFQUp4QyxFQUtHTCxHQUxILENBS08sS0FMUCxFQUtjTSxlQUxkLEVBTUdKLEdBTkgsQ0FNTyxHQU5QLEVBTVksQ0FBQ0ssR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFBRUEsRUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVMsZUFBVDtBQUEwQixDQU50RCxFQU9HSSxNQVBILENBT1ViLElBUFYsRUFPZ0IsU0FQaEIsRUFPNEJjLEdBQUQsSUFBUztBQUNoQyxNQUFJQSxHQUFKLEVBQVM7QUFDUEMsb0JBQU9DLEtBQVAsQ0FBYUYsR0FBYjs7QUFDQTtBQUNEOztBQUNEQyxrQkFBT0UsSUFBUCxDQUFhLDhCQUE2QmpCLElBQUssR0FBL0M7QUFDRCxDQWJIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dpbmcvbG9nZ2VyJ1xuaW1wb3J0IHJlcXVlc3RMb2dnZXIgZnJvbSAnLi9sb2dnaW5nL3JlcXVlc3RMb2dnZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwXG5cbmV4cHJlc3MoKVxuICAudXNlKHJlcXVlc3RMb2dnZXIpXG4gIC51c2UoanNvbigpKVxuICAudXNlKGNvcnMoKSlcbiAgLmdldCgnL2hlYWx0aGNoZWNrJywgKF8sIHJlc3BvbnNlKSA9PiByZXNwb25zZS5zZW5kKCkpXG4gIC51c2UoJy92MScsIHJvdXRlcylcbiAgLmdldCgnLycsIChyZXEsIHJlcykgPT4geyByZXMuc2VuZCgnSGlpaWlpaWlpaWlpaScpfSlcbiAgLmxpc3Rlbihwb3J0LCAnMC4wLjAuMCcsIChlcnIpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoZXJyKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGxvZ2dlci5pbmZvKGBTdGFydGVkLiBMaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9LmApXG4gIH0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "requestLogger",
        "get",
        "_",
        "response",
        "send",
        "routes",
        "req",
        "res",
        "listen",
        "err",
        "logger",
        "error",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,wBACGC,GADH,CACOC,sBADP,EAEGD,GAFH,CAEO,oBAFP,EAGGA,GAHH,CAGO,oBAHP,EAIGE,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGL,GALH,CAKO,KALP,EAKcM,eALd,EAMGJ,GANH,CAMO,GANP,EAMY,CAACK,GAAD,EAAMC,GAAN,KAAc;AAAEA,EAAAA,GAAG,CAACH,IAAJ,CAAS,eAAT;AAA0B,CANtD,EAOGI,MAPH,CAOUb,IAPV,EAOgB,SAPhB,EAO4Bc,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPC,oBAAOC,KAAP,CAAaF,GAAb;;AACA;AACD;;AACDC,kBAAOE,IAAP,CAAa,8BAA6BjB,IAAK,GAA/C;AACD,CAbH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport routes from './routes'\nimport logger from './logging/logger'\nimport requestLogger from './logging/requestLogger'\nimport cors from 'cors'\n\nconst port = process.env.PORT || 8080\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(cors())\n  .get('/healthcheck', (_, response) => response.send())\n  .use('/v1', routes)\n  .get('/', (req, res) => { res.send('Hiiiiiiiiiiii')})\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574771470000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/createTopic', _controller.createTopic).post('/createFlashcard', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).delete('/deleteTopic/:id', _controller.deleteTopic).post('/update/:id', _controller.updateFlashcard).post('/updateTopicName/:id', _controller.updateTopicName).get('/listTopics', _controller.listTopics).get('/getTopics', _controller.getTopicsByFilter);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlVG9waWMiLCJjcmVhdGVGbGFzaGNhcmQiLCJsaXN0Rmxhc2hjYXJkcyIsImRlbGV0ZSIsImRlbGV0ZUZsYXNoY2FyZCIsImRlbGV0ZVRvcGljIiwidXBkYXRlRmxhc2hjYXJkIiwidXBkYXRlVG9waWNOYW1lIiwiZ2V0IiwibGlzdFRvcGljcyIsImdldFRvcGljc0J5RmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBWUEsTUFBTUEsTUFBTSxHQUFHLHVCQUNWQyxJQURVLENBQ0wsY0FESyxFQUNXQyx1QkFEWCxFQUVWRCxJQUZVLENBRUwsa0JBRkssRUFFZUUsMkJBRmYsRUFHVkYsSUFIVSxDQUdMLE9BSEssRUFHSUcsMEJBSEosRUFJVkMsTUFKVSxDQUlILGFBSkcsRUFJWUMsMkJBSlosRUFLVkQsTUFMVSxDQUtILGtCQUxHLEVBS2lCRSx1QkFMakIsRUFNVk4sSUFOVSxDQU1MLGFBTkssRUFNVU8sMkJBTlYsRUFPVlAsSUFQVSxDQU9MLHNCQVBLLEVBT21CUSwyQkFQbkIsRUFRVkMsR0FSVSxDQVFOLGFBUk0sRUFRU0Msc0JBUlQsRUFTVkQsR0FUVSxDQVNOLFlBVE0sRUFTUUUsNkJBVFIsQ0FBZjtlQVdlWixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7XG4gICAgY3JlYXRlRmxhc2hjYXJkLFxuICAgIHVwZGF0ZUZsYXNoY2FyZCxcbiAgICBkZWxldGVGbGFzaGNhcmQsXG4gICAgZGVsZXRlVG9waWMsXG4gICAgbGlzdEZsYXNoY2FyZHMsXG4gICAgbGlzdFRvcGljcyxcbiAgICBnZXRUb3BpY3NCeUZpbHRlcixcbiAgICBjcmVhdGVUb3BpYyxcbiAgICB1cGRhdGVUb3BpY05hbWVcbn0gZnJvbSAnLi9jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXMgPSBSb3V0ZXIoKVxuICAgIC5wb3N0KCcvY3JlYXRlVG9waWMnLCBjcmVhdGVUb3BpYylcbiAgICAucG9zdCgnL2NyZWF0ZUZsYXNoY2FyZCcsIGNyZWF0ZUZsYXNoY2FyZClcbiAgICAucG9zdCgnL2xpc3QnLCBsaXN0Rmxhc2hjYXJkcylcbiAgICAuZGVsZXRlKCcvZGVsZXRlLzppZCcsIGRlbGV0ZUZsYXNoY2FyZClcbiAgICAuZGVsZXRlKCcvZGVsZXRlVG9waWMvOmlkJywgZGVsZXRlVG9waWMpXG4gICAgLnBvc3QoJy91cGRhdGUvOmlkJywgdXBkYXRlRmxhc2hjYXJkKVxuICAgIC5wb3N0KCcvdXBkYXRlVG9waWNOYW1lLzppZCcsIHVwZGF0ZVRvcGljTmFtZSlcbiAgICAuZ2V0KCcvbGlzdFRvcGljcycsIGxpc3RUb3BpY3MpXG4gICAgLmdldCgnL2dldFRvcGljcycsIGdldFRvcGljc0J5RmlsdGVyKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXNcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createTopic",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "deleteTopic",
        "updateFlashcard",
        "updateTopicName",
        "get",
        "listTopics",
        "getTopicsByFilter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAYA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,cADK,EACWC,uBADX,EAEVD,IAFU,CAEL,kBAFK,EAEeE,2BAFf,EAGVF,IAHU,CAGL,OAHK,EAGIG,0BAHJ,EAIVC,MAJU,CAIH,aAJG,EAIYC,2BAJZ,EAKVD,MALU,CAKH,kBALG,EAKiBE,uBALjB,EAMVN,IANU,CAML,aANK,EAMUO,2BANV,EAOVP,IAPU,CAOL,sBAPK,EAOmBQ,2BAPnB,EAQVC,GARU,CAQN,aARM,EAQSC,sBART,EASVD,GATU,CASN,YATM,EASQE,6BATR,CAAf;eAWeZ,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport {\n    createFlashcard,\n    updateFlashcard,\n    deleteFlashcard,\n    deleteTopic,\n    listFlashcards,\n    listTopics,\n    getTopicsByFilter,\n    createTopic,\n    updateTopicName\n} from './controller'\n\nconst routes = Router()\n    .post('/createTopic', createTopic)\n    .post('/createFlashcard', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .delete('/deleteTopic/:id', deleteTopic)\n    .post('/update/:id', updateFlashcard)\n    .post('/updateTopicName/:id', updateTopicName)\n    .get('/listTopics', listTopics)\n    .get('/getTopics', getTopicsByFilter)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574766326000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopicsByFilter = exports.listTopics = exports.listFlashcards = exports.deleteTopic = exports.deleteFlashcard = exports.updateTopicName = exports.updateFlashcard = exports.createTopic = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  (0, _logger.logInfo)(\"Checking flashcard exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getFlashcardByName)(name);\n    (0, _logger.logInfo)(`Got result of flashcard check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n\n    if (!dbResponse) {\n      (0, _logger.logError)(\"Something major went wrong\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    term,\n    definition,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(term, definition, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst createTopic = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    colour\n  } = data;\n  (0, _logger.logInfo)(\"Checking topic exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getTopicCountByName)(name);\n    (0, _logger.logInfo)(`Got result of topic check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting topic into database \", {\n    name,\n    colour\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertTopic)(name, colour);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createTopic = createTopic;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst updateTopicName = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update topic', id);\n\n  if (id === undefined || id === \"\") {\n    (0, _logger.logError)(\"No id received in request\");\n    return response.sendStatus(400);\n  }\n\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    name\n  } = data;\n\n  if (name) {\n    try {\n      const dbResponse = await (0, _data.updateTopicByName)(id, name);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateTopicName = updateTopicName;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst deleteTopic = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete topic\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeTopic)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteTopic = deleteTopic;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n\nconst listTopics = async (request, response) => {\n  // Endpoint to do a select * from topics\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopics)();\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listTopics = listTopics;\n\nconst getTopicsByFilter = async (request, response) => {\n  // Endpoint to do a select * from topics where...\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  const topicTerm = request.query.topic;\n  (0, _logger.logInfo)(`Received search term: ${topicTerm}`);\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopicsByName)(topicTerm);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", err);\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.getTopicsByFilter = getTopicsByFilter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "dbResponse",
        "sendStatus",
        "err",
        "stack",
        "createTopic",
        "colour",
        "updateFlashcard",
        "id",
        "params",
        "updateTopicName",
        "undefined",
        "deleteFlashcard",
        "deleteTopic",
        "listFlashcards",
        "searchTerms",
        "status",
        "send",
        "listTopics",
        "getTopicsByFilter",
        "topicTerm",
        "query"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    removeTopic,\n    updateFlashcardDefinition,\n    getFlashcardByName,\n    getTopics,\n    getTopicsByName,\n    getTopicCountByName,\n    insertTopic,\n    updateTopicByName\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    logInfo(\"Checking flashcard exists in Database\")\n\n    try {\n        const dbResponse = await getFlashcardByName(name)\n        logInfo(`Got result of flashcard check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n\n        if (!dbResponse){\n            logError(\"Something major went wrong\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n\n    }\n\n    logInfo(\"Inserting into database \", {term, definition, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(term, definition, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n\n    }\n}\n\nexport const createTopic = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, colour} = data\n\n    logInfo(\"Checking topic exists in Database\")\n\n    try {\n        const dbResponse = await getTopicCountByName(name)\n        logInfo(`Got result of topic check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n    }\n\n    logInfo(\"Inserting topic into database \", {name, colour})\n\n    try {\n        const dbResponse = await insertTopic(name, colour)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term } = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const updateTopicName = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update topic', id)\n\n    if (id === undefined || id === \"\") {\n        logError(\"No id received in request\")\n        return response.sendStatus(400)\n    }\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { name } = data\n\n    if (name) {\n        try{\n            const dbResponse = await updateTopicByName(id, name)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const deleteTopic = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete topic\", {id})\n\n    try {\n        const dbResponse = await removeTopic(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const listTopics = async (request, response) => {\n    // Endpoint to do a select * from topics\n    logInfo(\"Received request to list flashcards\")\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopics()\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const getTopicsByFilter = async (request, response) => {\n    // Endpoint to do a select * from topics where...\n    logInfo(\"Received request to get flashcards\")\n\n    const topicTerm = request.query.topic\n\n    logInfo(`Received search term: ${topicTerm}`)\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopicsByName(topicTerm)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", err)\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574330503000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/createTopic', _controller.createTopic).post('/createFlashcard', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).delete('/deleteTopic/:id', _controller.deleteTopic).post('/update/:id', _controller.updateFlashcard).post('/updateTopicName/:id', _controller.updateTopicName).get('/listTopics', _controller.listTopics).get('/getTopics', _controller.getTopicsByFilter);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlVG9waWMiLCJjcmVhdGVGbGFzaGNhcmQiLCJsaXN0Rmxhc2hjYXJkcyIsImRlbGV0ZSIsImRlbGV0ZUZsYXNoY2FyZCIsImRlbGV0ZVRvcGljIiwidXBkYXRlRmxhc2hjYXJkIiwidXBkYXRlVG9waWNOYW1lIiwiZ2V0IiwibGlzdFRvcGljcyIsImdldFRvcGljc0J5RmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBWUEsTUFBTUEsTUFBTSxHQUFHLHVCQUNWQyxJQURVLENBQ0wsY0FESyxFQUNXQyx1QkFEWCxFQUVWRCxJQUZVLENBRUwsa0JBRkssRUFFZUUsMkJBRmYsRUFHVkYsSUFIVSxDQUdMLE9BSEssRUFHSUcsMEJBSEosRUFJVkMsTUFKVSxDQUlILGFBSkcsRUFJWUMsMkJBSlosRUFLVkQsTUFMVSxDQUtILGtCQUxHLEVBS2lCRSx1QkFMakIsRUFNVk4sSUFOVSxDQU1MLGFBTkssRUFNVU8sMkJBTlYsRUFPVlAsSUFQVSxDQU9MLHNCQVBLLEVBT21CUSwyQkFQbkIsRUFRVkMsR0FSVSxDQVFOLGFBUk0sRUFRU0Msc0JBUlQsRUFTVkQsR0FUVSxDQVNOLFlBVE0sRUFTUUUsNkJBVFIsQ0FBZjtlQVdlWixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7XG4gICAgY3JlYXRlRmxhc2hjYXJkLFxuICAgIHVwZGF0ZUZsYXNoY2FyZCxcbiAgICBkZWxldGVGbGFzaGNhcmQsXG4gICAgZGVsZXRlVG9waWMsXG4gICAgbGlzdEZsYXNoY2FyZHMsXG4gICAgbGlzdFRvcGljcyxcbiAgICBnZXRUb3BpY3NCeUZpbHRlcixcbiAgICBjcmVhdGVUb3BpYyxcbiAgICB1cGRhdGVUb3BpY05hbWVcbn0gZnJvbSAnLi9jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXMgPSBSb3V0ZXIoKVxuICAgIC5wb3N0KCcvY3JlYXRlVG9waWMnLCBjcmVhdGVUb3BpYylcbiAgICAucG9zdCgnL2NyZWF0ZUZsYXNoY2FyZCcsIGNyZWF0ZUZsYXNoY2FyZClcbiAgICAucG9zdCgnL2xpc3QnLCBsaXN0Rmxhc2hjYXJkcylcbiAgICAuZGVsZXRlKCcvZGVsZXRlLzppZCcsIGRlbGV0ZUZsYXNoY2FyZClcbiAgICAuZGVsZXRlKCcvZGVsZXRlVG9waWMvOmlkJywgZGVsZXRlVG9waWMpXG4gICAgLnBvc3QoJy91cGRhdGUvOmlkJywgdXBkYXRlRmxhc2hjYXJkKVxuICAgIC5wb3N0KCcvdXBkYXRlVG9waWNOYW1lLzppZCcsIHVwZGF0ZVRvcGljTmFtZSlcbiAgICAuZ2V0KCcvbGlzdFRvcGljcycsIGxpc3RUb3BpY3MpXG4gICAgLmdldCgnL2dldFRvcGljcycsIGdldFRvcGljc0J5RmlsdGVyKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXNcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createTopic",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "deleteTopic",
        "updateFlashcard",
        "updateTopicName",
        "get",
        "listTopics",
        "getTopicsByFilter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAYA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,cADK,EACWC,uBADX,EAEVD,IAFU,CAEL,kBAFK,EAEeE,2BAFf,EAGVF,IAHU,CAGL,OAHK,EAGIG,0BAHJ,EAIVC,MAJU,CAIH,aAJG,EAIYC,2BAJZ,EAKVD,MALU,CAKH,kBALG,EAKiBE,uBALjB,EAMVN,IANU,CAML,aANK,EAMUO,2BANV,EAOVP,IAPU,CAOL,sBAPK,EAOmBQ,2BAPnB,EAQVC,GARU,CAQN,aARM,EAQSC,sBART,EASVD,GATU,CASN,YATM,EASQE,6BATR,CAAf;eAWeZ,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport {\n    createFlashcard,\n    updateFlashcard,\n    deleteFlashcard,\n    deleteTopic,\n    listFlashcards,\n    listTopics,\n    getTopicsByFilter,\n    createTopic,\n    updateTopicName\n} from './controller'\n\nconst routes = Router()\n    .post('/createTopic', createTopic)\n    .post('/createFlashcard', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .delete('/deleteTopic/:id', deleteTopic)\n    .post('/update/:id', updateFlashcard)\n    .post('/updateTopicName/:id', updateTopicName)\n    .get('/listTopics', listTopics)\n    .get('/getTopics', getTopicsByFilter)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574766326000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopicsByFilter = exports.listTopics = exports.listFlashcards = exports.deleteTopic = exports.deleteFlashcard = exports.updateTopicName = exports.updateFlashcard = exports.createTopic = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  (0, _logger.logInfo)(\"Checking flashcard exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getFlashcardByName)(name);\n    (0, _logger.logInfo)(`Got result of flashcard check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n\n    if (!dbResponse) {\n      (0, _logger.logError)(\"Something major went wrong\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    term,\n    definition,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(term, definition, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst createTopic = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    colour\n  } = data;\n  (0, _logger.logInfo)(\"Checking topic exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getTopicCountByName)(name);\n    (0, _logger.logInfo)(`Got result of topic check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting topic into database \", {\n    name,\n    colour\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertTopic)(name, colour);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createTopic = createTopic;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst updateTopicName = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update topic', id);\n\n  if (id === undefined || id === \"\") {\n    (0, _logger.logError)(\"No id received in request\");\n    return response.sendStatus(400);\n  }\n\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    name\n  } = data;\n\n  if (name) {\n    try {\n      const dbResponse = await (0, _data.updateTopicByName)(id, name);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateTopicName = updateTopicName;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst deleteTopic = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete topic\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeTopic)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteTopic = deleteTopic;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n\nconst listTopics = async (request, response) => {\n  // Endpoint to do a select * from topics\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopics)();\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listTopics = listTopics;\n\nconst getTopicsByFilter = async (request, response) => {\n  // Endpoint to do a select * from topics where...\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  const topicTerm = request.query.topic;\n  (0, _logger.logInfo)(`Received search term: ${topicTerm}`);\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopicsByName)(topicTerm);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", err);\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.getTopicsByFilter = getTopicsByFilter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "dbResponse",
        "sendStatus",
        "err",
        "stack",
        "createTopic",
        "colour",
        "updateFlashcard",
        "id",
        "params",
        "updateTopicName",
        "undefined",
        "deleteFlashcard",
        "deleteTopic",
        "listFlashcards",
        "searchTerms",
        "status",
        "send",
        "listTopics",
        "getTopicsByFilter",
        "topicTerm",
        "query"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    removeTopic,\n    updateFlashcardDefinition,\n    getFlashcardByName,\n    getTopics,\n    getTopicsByName,\n    getTopicCountByName,\n    insertTopic,\n    updateTopicByName\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    logInfo(\"Checking flashcard exists in Database\")\n\n    try {\n        const dbResponse = await getFlashcardByName(name)\n        logInfo(`Got result of flashcard check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n\n        if (!dbResponse){\n            logError(\"Something major went wrong\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n\n    }\n\n    logInfo(\"Inserting into database \", {term, definition, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(term, definition, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n\n    }\n}\n\nexport const createTopic = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, colour} = data\n\n    logInfo(\"Checking topic exists in Database\")\n\n    try {\n        const dbResponse = await getTopicCountByName(name)\n        logInfo(`Got result of topic check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n    }\n\n    logInfo(\"Inserting topic into database \", {name, colour})\n\n    try {\n        const dbResponse = await insertTopic(name, colour)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term } = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const updateTopicName = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update topic', id)\n\n    if (id === undefined || id === \"\") {\n        logError(\"No id received in request\")\n        return response.sendStatus(400)\n    }\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { name } = data\n\n    if (name) {\n        try{\n            const dbResponse = await updateTopicByName(id, name)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const deleteTopic = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete topic\", {id})\n\n    try {\n        const dbResponse = await removeTopic(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const listTopics = async (request, response) => {\n    // Endpoint to do a select * from topics\n    logInfo(\"Received request to list flashcards\")\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopics()\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const getTopicsByFilter = async (request, response) => {\n    // Endpoint to do a select * from topics where...\n    logInfo(\"Received request to get flashcards\")\n\n    const topicTerm = request.query.topic\n\n    logInfo(`Received search term: ${topicTerm}`)\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopicsByName(topicTerm)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", err)\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574330503000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateTopicByName = exports.updateFlashcardDefinition = exports.getFlashcards = exports.getTopics = exports.removeTopic = exports.removeFlashcard = exports.insertTopic = exports.insertFlashcard = exports.getTopicsByName = exports.getTopicCountByName = exports.getFlashcardByName = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst connectionString = process.env.DB_CONNECTION;\n(0, _logger.logInfo)(`Connecting to: ${connectionString}`);\nconst postgresPool = new _pg.Pool({\n  connectionString: connectionString\n});\n\nconst getFlashcardByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getFlashcardByName = getFlashcardByName;\n\nconst getTopicCountByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getTopicCountByName = getTopicCountByName;\n\nconst getTopicsByName = async name => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Making connectiong to database\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopicsByName = getTopicsByName;\n\nconst insertFlashcard = async (term, definition, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n      values: [term, definition, topic, name]\n    };\n    (0, _logger.logInfo)(`Making query: ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n      console.log(queryError);\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return null;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst insertTopic = async (name, colour) => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to insert topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    (0, _logger.logInfo)(\"Connected to Data successfully\");\n    const query = {\n      text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n      values: [name, colour]\n    };\n    (0, _logger.logInfo)(`Making query ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(`Received result: ${result.rowCount}`);\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertTopic = insertTopic;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst removeTopic = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeTopic = removeTopic;\n\nconst getTopics = async () => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to get topics\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopics = getTopics;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  const hasEmptyValues = searchTerms => {\n    console.log(\"Checking empty values for: \", searchTerms);\n    return Object.values(searchTerms).every(val => val === null || val === '');\n  };\n\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n      values: []\n    };\n\n    if (!hasEmptyValues(searchTerms)) {\n      (0, _logger.logInfo)(\"Building query parameters\");\n      let whereClause = ' WHERE ';\n      Object.entries(searchTerms).map(([column, value], index) => {\n        console.log(`${index}: ${column} => ${value}`);\n\n        if (!(value === null || value === '')) {\n          query.values.push(value);\n\n          if (whereClause !== ' WHERE ') {\n            whereClause += ` AND `;\n          }\n\n          switch (column) {\n            case 'topic_id':\n              whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`;\n              break;\n\n            default:\n              whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`;\n          }\n        }\n      });\n      (0, _logger.logInfo)(`Built ${whereClause}`);\n      query.text += whereClause;\n      (0, _logger.logInfo)(\"Query values: \", query.values);\n    }\n\n    (0, _logger.logInfo)(\"Preparing to make query\", {\n      queryText: query.text\n    });\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n\nconst updateTopicByName = async (id, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n      values: [name, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateTopicByName = updateTopicByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "connectionString",
        "process",
        "env",
        "DB_CONNECTION",
        "postgresPool",
        "Pool",
        "getFlashcardByName",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "count",
        "rows",
        "getTopicCountByName",
        "getTopicsByName",
        "insertFlashcard",
        "term",
        "definition",
        "topic",
        "console",
        "log",
        "rowCount",
        "insertTopic",
        "colour",
        "removeFlashcard",
        "id",
        "removeTopic",
        "getTopics",
        "getFlashcards",
        "searchTerms",
        "hasEmptyValues",
        "Object",
        "every",
        "val",
        "whereClause",
        "entries",
        "map",
        "column",
        "value",
        "index",
        "push",
        "length",
        "queryText",
        "updateFlashcardDefinition",
        "updateTopicByName"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst connectionString = process.env.DB_CONNECTION\n\nlogInfo(`Connecting to: ${connectionString}`)\nconst postgresPool = new Pool({\n    connectionString: connectionString,\n})\n\nexport const getFlashcardByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicCountByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicsByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Making connectiong to database\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const insertFlashcard = async (term, definition, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n                values: [term, definition, topic, name]\n            }\n\n            logInfo(`Making query: ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                console.log(queryError)\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return null\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const insertTopic = async (name, colour) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to insert topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            logInfo(\"Connected to Data successfully\")\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n                values: [name, colour]\n            }\n\n            logInfo(`Making query ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(`Received result: ${result.rowCount}`)\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const removeTopic = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getTopics = async () => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to get topics\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n\n        const hasEmptyValues = (searchTerms) => {\n            console.log(\"Checking empty values for: \", searchTerms)\n            return Object.values(searchTerms).every((val) => (val === null || val === ''))\n        }\n\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n                values: []\n            }\n\n            if (!hasEmptyValues(searchTerms)){\n                logInfo(\"Building query parameters\")\n                let whereClause = ' WHERE '\n                Object.entries(searchTerms).map(([column, value], index) => {\n                    console.log(`${index}: ${column} => ${value}`)\n                    if (!(value === null || value === '')){\n                        query.values.push(value)\n                        if (whereClause !== ' WHERE '){\n                            whereClause += ` AND `\n                        }\n\n                        switch(column) {\n                            case 'topic_id':\n                                whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`\n                                break;\n                            default:\n                                whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`\n                        }\n                    }\n                })\n                logInfo(`Built ${whereClause}`)\n                query.text += whereClause\n                logInfo(\"Query values: \", query.values)\n            }\n\n            logInfo(\"Preparing to make query\", {queryText: query.text})\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const updateTopicByName = async (id, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n                values: [name, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574770918000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateTopicByName = exports.updateFlashcardDefinition = exports.getFlashcards = exports.getTopics = exports.removeTopic = exports.removeFlashcard = exports.insertTopic = exports.insertFlashcard = exports.getTopicsByName = exports.getTopicCountByName = exports.getFlashcardByName = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst connectionString = process.env.DB_CONNECTION;\n(0, _logger.logInfo)(`Connecting to: ${connectionString}`);\nconst postgresPool = new _pg.Pool({\n  connectionString: connectionString\n});\n\nconst getFlashcardByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getFlashcardByName = getFlashcardByName;\n\nconst getTopicCountByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getTopicCountByName = getTopicCountByName;\n\nconst getTopicsByName = async name => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Making connectiong to database\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopicsByName = getTopicsByName;\n\nconst insertFlashcard = async (term, definition, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n      values: [term, definition, topic, name]\n    };\n    (0, _logger.logInfo)(`Making query: ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n      console.log(queryError);\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return null;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst insertTopic = async (name, colour) => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to insert topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    (0, _logger.logInfo)(\"Connected to Data successfully\");\n    const query = {\n      text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n      values: [name, colour]\n    };\n    (0, _logger.logInfo)(`Making query ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(`Received result: ${result.rowCount}`);\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertTopic = insertTopic;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst removeTopic = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeTopic = removeTopic;\n\nconst getTopics = async () => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to get topics\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopics = getTopics;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  const hasEmptyValues = searchTerms => {\n    console.log(\"Checking empty values for: \", searchTerms);\n    return Object.values(searchTerms).every(val => val === null || val === '');\n  };\n\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n      values: []\n    };\n\n    if (!hasEmptyValues(searchTerms)) {\n      (0, _logger.logInfo)(\"Building query parameters\");\n      let whereClause = ' WHERE ';\n      Object.entries(searchTerms).map(([column, value], index) => {\n        console.log(`${index}: ${column} => ${value}`);\n\n        if (!(value === null || value === '')) {\n          query.values.push(value);\n\n          if (whereClause !== ' WHERE ') {\n            whereClause += ` AND `;\n          }\n\n          switch (column) {\n            case 'topic_id':\n              whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`;\n              break;\n\n            default:\n              whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`;\n          }\n        }\n      });\n      (0, _logger.logInfo)(`Built ${whereClause}`);\n      query.text += whereClause;\n      (0, _logger.logInfo)(\"Query values: \", query.values);\n    }\n\n    (0, _logger.logInfo)(\"Preparing to make query\", {\n      queryText: query.text\n    });\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n\nconst updateTopicByName = async (id, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n      values: [name, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateTopicByName = updateTopicByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "connectionString",
        "process",
        "env",
        "DB_CONNECTION",
        "postgresPool",
        "Pool",
        "getFlashcardByName",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "count",
        "rows",
        "getTopicCountByName",
        "getTopicsByName",
        "insertFlashcard",
        "term",
        "definition",
        "topic",
        "console",
        "log",
        "rowCount",
        "insertTopic",
        "colour",
        "removeFlashcard",
        "id",
        "removeTopic",
        "getTopics",
        "getFlashcards",
        "searchTerms",
        "hasEmptyValues",
        "Object",
        "every",
        "val",
        "whereClause",
        "entries",
        "map",
        "column",
        "value",
        "index",
        "push",
        "length",
        "queryText",
        "updateFlashcardDefinition",
        "updateTopicByName"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst connectionString = process.env.DB_CONNECTION\n\nlogInfo(`Connecting to: ${connectionString}`)\nconst postgresPool = new Pool({\n    connectionString: connectionString,\n})\n\nexport const getFlashcardByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicCountByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicsByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Making connectiong to database\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const insertFlashcard = async (term, definition, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n                values: [term, definition, topic, name]\n            }\n\n            logInfo(`Making query: ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                console.log(queryError)\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return null\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const insertTopic = async (name, colour) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to insert topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            logInfo(\"Connected to Data successfully\")\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n                values: [name, colour]\n            }\n\n            logInfo(`Making query ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(`Received result: ${result.rowCount}`)\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const removeTopic = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getTopics = async () => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to get topics\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n\n        const hasEmptyValues = (searchTerms) => {\n            console.log(\"Checking empty values for: \", searchTerms)\n            return Object.values(searchTerms).every((val) => (val === null || val === ''))\n        }\n\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n                values: []\n            }\n\n            if (!hasEmptyValues(searchTerms)){\n                logInfo(\"Building query parameters\")\n                let whereClause = ' WHERE '\n                Object.entries(searchTerms).map(([column, value], index) => {\n                    console.log(`${index}: ${column} => ${value}`)\n                    if (!(value === null || value === '')){\n                        query.values.push(value)\n                        if (whereClause !== ' WHERE '){\n                            whereClause += ` AND `\n                        }\n\n                        switch(column) {\n                            case 'topic_id':\n                                whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`\n                                break;\n                            default:\n                                whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`\n                        }\n                    }\n                })\n                logInfo(`Built ${whereClause}`)\n                query.text += whereClause\n                logInfo(\"Query values: \", query.values)\n            }\n\n            logInfo(\"Preparing to make query\", {queryText: query.text})\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const updateTopicByName = async (id, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n                values: [name, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574770918000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _logger = _interopRequireDefault(require(\"./logging/logger\"));\n\nvar _requestLogger = _interopRequireDefault(require(\"./logging/requestLogger\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst port = process.env.PORT || 8080;\n(0, _express.default)().use(_requestLogger.default).use((0, _express.json)()).use((0, _cors.default)()).get('/healthcheck', (_, response) => response.send()).use('/v1', _routes.default).get('/', (req, res) => {\n  res.send('Hiiiiiiiiiiii');\n}).listen(port, '0.0.0.0', err => {\n  if (err) {\n    _logger.default.error(err);\n\n    return;\n  }\n\n  _logger.default.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJyZXF1ZXN0TG9nZ2VyIiwiZ2V0IiwiXyIsInJlc3BvbnNlIiwic2VuZCIsInJvdXRlcyIsInJlcSIsInJlcyIsImxpc3RlbiIsImVyciIsImxvZ2dlciIsImVycm9yIiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUEsd0JBQ0dDLEdBREgsQ0FDT0Msc0JBRFAsRUFFR0QsR0FGSCxDQUVPLG9CQUZQLEVBR0dBLEdBSEgsQ0FHTyxvQkFIUCxFQUlHRSxHQUpILENBSU8sY0FKUCxFQUl1QixDQUFDQyxDQUFELEVBQUlDLFFBQUosS0FBaUJBLFFBQVEsQ0FBQ0MsSUFBVCxFQUp4QyxFQUtHTCxHQUxILENBS08sS0FMUCxFQUtjTSxlQUxkLEVBTUdKLEdBTkgsQ0FNTyxHQU5QLEVBTVksQ0FBQ0ssR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFBRUEsRUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVMsZUFBVDtBQUEwQixDQU50RCxFQU9HSSxNQVBILENBT1ViLElBUFYsRUFPZ0IsU0FQaEIsRUFPNEJjLEdBQUQsSUFBUztBQUNoQyxNQUFJQSxHQUFKLEVBQVM7QUFDUEMsb0JBQU9DLEtBQVAsQ0FBYUYsR0FBYjs7QUFDQTtBQUNEOztBQUNEQyxrQkFBT0UsSUFBUCxDQUFhLDhCQUE2QmpCLElBQUssR0FBL0M7QUFDRCxDQWJIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dpbmcvbG9nZ2VyJ1xuaW1wb3J0IHJlcXVlc3RMb2dnZXIgZnJvbSAnLi9sb2dnaW5nL3JlcXVlc3RMb2dnZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwXG5cbmV4cHJlc3MoKVxuICAudXNlKHJlcXVlc3RMb2dnZXIpXG4gIC51c2UoanNvbigpKVxuICAudXNlKGNvcnMoKSlcbiAgLmdldCgnL2hlYWx0aGNoZWNrJywgKF8sIHJlc3BvbnNlKSA9PiByZXNwb25zZS5zZW5kKCkpXG4gIC51c2UoJy92MScsIHJvdXRlcylcbiAgLmdldCgnLycsIChyZXEsIHJlcykgPT4geyByZXMuc2VuZCgnSGlpaWlpaWlpaWlpaScpfSlcbiAgLmxpc3Rlbihwb3J0LCAnMC4wLjAuMCcsIChlcnIpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoZXJyKVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGxvZ2dlci5pbmZvKGBTdGFydGVkLiBMaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9LmApXG4gIH0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "requestLogger",
        "get",
        "_",
        "response",
        "send",
        "routes",
        "req",
        "res",
        "listen",
        "err",
        "logger",
        "error",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,wBACGC,GADH,CACOC,sBADP,EAEGD,GAFH,CAEO,oBAFP,EAGGA,GAHH,CAGO,oBAHP,EAIGE,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGL,GALH,CAKO,KALP,EAKcM,eALd,EAMGJ,GANH,CAMO,GANP,EAMY,CAACK,GAAD,EAAMC,GAAN,KAAc;AAAEA,EAAAA,GAAG,CAACH,IAAJ,CAAS,eAAT;AAA0B,CANtD,EAOGI,MAPH,CAOUb,IAPV,EAOgB,SAPhB,EAO4Bc,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPC,oBAAOC,KAAP,CAAaF,GAAb;;AACA;AACD;;AACDC,kBAAOE,IAAP,CAAa,8BAA6BjB,IAAK,GAA/C;AACD,CAbH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport routes from './routes'\nimport logger from './logging/logger'\nimport requestLogger from './logging/requestLogger'\nimport cors from 'cors'\n\nconst port = process.env.PORT || 8080\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(cors())\n  .get('/healthcheck', (_, response) => response.send())\n  .use('/v1', routes)\n  .get('/', (req, res) => { res.send('Hiiiiiiiiiiii')})\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574771470000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/createTopic', _controller.createTopic).post('/createFlashcard', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).delete('/deleteTopic/:id', _controller.deleteTopic).post('/update/:id', _controller.updateFlashcard).post('/updateTopicName/:id', _controller.updateTopicName).get('/listTopics', _controller.listTopics).get('/getTopics', _controller.getTopicsByFilter);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlVG9waWMiLCJjcmVhdGVGbGFzaGNhcmQiLCJsaXN0Rmxhc2hjYXJkcyIsImRlbGV0ZSIsImRlbGV0ZUZsYXNoY2FyZCIsImRlbGV0ZVRvcGljIiwidXBkYXRlRmxhc2hjYXJkIiwidXBkYXRlVG9waWNOYW1lIiwiZ2V0IiwibGlzdFRvcGljcyIsImdldFRvcGljc0J5RmlsdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBWUEsTUFBTUEsTUFBTSxHQUFHLHVCQUNWQyxJQURVLENBQ0wsY0FESyxFQUNXQyx1QkFEWCxFQUVWRCxJQUZVLENBRUwsa0JBRkssRUFFZUUsMkJBRmYsRUFHVkYsSUFIVSxDQUdMLE9BSEssRUFHSUcsMEJBSEosRUFJVkMsTUFKVSxDQUlILGFBSkcsRUFJWUMsMkJBSlosRUFLVkQsTUFMVSxDQUtILGtCQUxHLEVBS2lCRSx1QkFMakIsRUFNVk4sSUFOVSxDQU1MLGFBTkssRUFNVU8sMkJBTlYsRUFPVlAsSUFQVSxDQU9MLHNCQVBLLEVBT21CUSwyQkFQbkIsRUFRVkMsR0FSVSxDQVFOLGFBUk0sRUFRU0Msc0JBUlQsRUFTVkQsR0FUVSxDQVNOLFlBVE0sRUFTUUUsNkJBVFIsQ0FBZjtlQVdlWixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7XG4gICAgY3JlYXRlRmxhc2hjYXJkLFxuICAgIHVwZGF0ZUZsYXNoY2FyZCxcbiAgICBkZWxldGVGbGFzaGNhcmQsXG4gICAgZGVsZXRlVG9waWMsXG4gICAgbGlzdEZsYXNoY2FyZHMsXG4gICAgbGlzdFRvcGljcyxcbiAgICBnZXRUb3BpY3NCeUZpbHRlcixcbiAgICBjcmVhdGVUb3BpYyxcbiAgICB1cGRhdGVUb3BpY05hbWVcbn0gZnJvbSAnLi9jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXMgPSBSb3V0ZXIoKVxuICAgIC5wb3N0KCcvY3JlYXRlVG9waWMnLCBjcmVhdGVUb3BpYylcbiAgICAucG9zdCgnL2NyZWF0ZUZsYXNoY2FyZCcsIGNyZWF0ZUZsYXNoY2FyZClcbiAgICAucG9zdCgnL2xpc3QnLCBsaXN0Rmxhc2hjYXJkcylcbiAgICAuZGVsZXRlKCcvZGVsZXRlLzppZCcsIGRlbGV0ZUZsYXNoY2FyZClcbiAgICAuZGVsZXRlKCcvZGVsZXRlVG9waWMvOmlkJywgZGVsZXRlVG9waWMpXG4gICAgLnBvc3QoJy91cGRhdGUvOmlkJywgdXBkYXRlRmxhc2hjYXJkKVxuICAgIC5wb3N0KCcvdXBkYXRlVG9waWNOYW1lLzppZCcsIHVwZGF0ZVRvcGljTmFtZSlcbiAgICAuZ2V0KCcvbGlzdFRvcGljcycsIGxpc3RUb3BpY3MpXG4gICAgLmdldCgnL2dldFRvcGljcycsIGdldFRvcGljc0J5RmlsdGVyKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXNcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createTopic",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "deleteTopic",
        "updateFlashcard",
        "updateTopicName",
        "get",
        "listTopics",
        "getTopicsByFilter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAYA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,cADK,EACWC,uBADX,EAEVD,IAFU,CAEL,kBAFK,EAEeE,2BAFf,EAGVF,IAHU,CAGL,OAHK,EAGIG,0BAHJ,EAIVC,MAJU,CAIH,aAJG,EAIYC,2BAJZ,EAKVD,MALU,CAKH,kBALG,EAKiBE,uBALjB,EAMVN,IANU,CAML,aANK,EAMUO,2BANV,EAOVP,IAPU,CAOL,sBAPK,EAOmBQ,2BAPnB,EAQVC,GARU,CAQN,aARM,EAQSC,sBART,EASVD,GATU,CASN,YATM,EASQE,6BATR,CAAf;eAWeZ,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport {\n    createFlashcard,\n    updateFlashcard,\n    deleteFlashcard,\n    deleteTopic,\n    listFlashcards,\n    listTopics,\n    getTopicsByFilter,\n    createTopic,\n    updateTopicName\n} from './controller'\n\nconst routes = Router()\n    .post('/createTopic', createTopic)\n    .post('/createFlashcard', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .delete('/deleteTopic/:id', deleteTopic)\n    .post('/update/:id', updateFlashcard)\n    .post('/updateTopicName/:id', updateTopicName)\n    .get('/listTopics', listTopics)\n    .get('/getTopics', getTopicsByFilter)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574766326000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopicsByFilter = exports.listTopics = exports.listFlashcards = exports.deleteTopic = exports.deleteFlashcard = exports.updateTopicName = exports.updateFlashcard = exports.createTopic = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  (0, _logger.logInfo)(\"Checking flashcard exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getFlashcardByName)(name);\n    (0, _logger.logInfo)(`Got result of flashcard check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n\n    if (!dbResponse) {\n      (0, _logger.logError)(\"Something major went wrong\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    term,\n    definition,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(term, definition, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst createTopic = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    colour\n  } = data;\n  (0, _logger.logInfo)(\"Checking topic exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getTopicCountByName)(name);\n    (0, _logger.logInfo)(`Got result of topic check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting topic into database \", {\n    name,\n    colour\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertTopic)(name, colour);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createTopic = createTopic;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst updateTopicName = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update topic', id);\n\n  if (id === undefined || id === \"\") {\n    (0, _logger.logError)(\"No id received in request\");\n    return response.sendStatus(400);\n  }\n\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    name\n  } = data;\n\n  if (name) {\n    try {\n      const dbResponse = await (0, _data.updateTopicByName)(id, name);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateTopicName = updateTopicName;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst deleteTopic = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete topic\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeTopic)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteTopic = deleteTopic;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n\nconst listTopics = async (request, response) => {\n  // Endpoint to do a select * from topics\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopics)();\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listTopics = listTopics;\n\nconst getTopicsByFilter = async (request, response) => {\n  // Endpoint to do a select * from topics where...\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  const topicTerm = request.query.topic;\n  (0, _logger.logInfo)(`Received search term: ${topicTerm}`);\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopicsByName)(topicTerm);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", err);\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.getTopicsByFilter = getTopicsByFilter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "dbResponse",
        "sendStatus",
        "err",
        "stack",
        "createTopic",
        "colour",
        "updateFlashcard",
        "id",
        "params",
        "updateTopicName",
        "undefined",
        "deleteFlashcard",
        "deleteTopic",
        "listFlashcards",
        "searchTerms",
        "status",
        "send",
        "listTopics",
        "getTopicsByFilter",
        "topicTerm",
        "query"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    removeTopic,\n    updateFlashcardDefinition,\n    getFlashcardByName,\n    getTopics,\n    getTopicsByName,\n    getTopicCountByName,\n    insertTopic,\n    updateTopicByName\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    logInfo(\"Checking flashcard exists in Database\")\n\n    try {\n        const dbResponse = await getFlashcardByName(name)\n        logInfo(`Got result of flashcard check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n\n        if (!dbResponse){\n            logError(\"Something major went wrong\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n\n    }\n\n    logInfo(\"Inserting into database \", {term, definition, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(term, definition, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n\n    }\n}\n\nexport const createTopic = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, colour} = data\n\n    logInfo(\"Checking topic exists in Database\")\n\n    try {\n        const dbResponse = await getTopicCountByName(name)\n        logInfo(`Got result of topic check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n    }\n\n    logInfo(\"Inserting topic into database \", {name, colour})\n\n    try {\n        const dbResponse = await insertTopic(name, colour)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term } = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const updateTopicName = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update topic', id)\n\n    if (id === undefined || id === \"\") {\n        logError(\"No id received in request\")\n        return response.sendStatus(400)\n    }\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { name } = data\n\n    if (name) {\n        try{\n            const dbResponse = await updateTopicByName(id, name)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const deleteTopic = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete topic\", {id})\n\n    try {\n        const dbResponse = await removeTopic(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const listTopics = async (request, response) => {\n    // Endpoint to do a select * from topics\n    logInfo(\"Received request to list flashcards\")\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopics()\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const getTopicsByFilter = async (request, response) => {\n    // Endpoint to do a select * from topics where...\n    logInfo(\"Received request to get flashcards\")\n\n    const topicTerm = request.query.topic\n\n    logInfo(`Received search term: ${topicTerm}`)\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopicsByName(topicTerm)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", err)\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1574330503000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateTopicByName = exports.updateFlashcardDefinition = exports.getFlashcards = exports.getTopics = exports.removeTopic = exports.removeFlashcard = exports.insertTopic = exports.insertFlashcard = exports.getTopicsByName = exports.getTopicCountByName = exports.getFlashcardByName = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst connectionString = process.env.DB_CONNECTION;\n(0, _logger.logInfo)(`Connecting to: ${connectionString}`);\nconst postgresPool = new _pg.Pool({\n  connectionString: connectionString\n});\n\nconst getFlashcardByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getFlashcardByName = getFlashcardByName;\n\nconst getTopicCountByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getTopicCountByName = getTopicCountByName;\n\nconst getTopicsByName = async name => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Making connectiong to database\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopicsByName = getTopicsByName;\n\nconst insertFlashcard = async (term, definition, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n      values: [term, definition, topic, name]\n    };\n    (0, _logger.logInfo)(`Making query: ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n      console.log(queryError);\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return null;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst insertTopic = async (name, colour) => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to insert topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    (0, _logger.logInfo)(\"Connected to Data successfully\");\n    const query = {\n      text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n      values: [name, colour]\n    };\n    (0, _logger.logInfo)(`Making query ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(`Received result: ${result.rowCount}`);\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertTopic = insertTopic;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst removeTopic = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeTopic = removeTopic;\n\nconst getTopics = async () => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to get topics\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopics = getTopics;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  const hasEmptyValues = searchTerms => {\n    console.log(\"Checking empty values for: \", searchTerms);\n    return Object.values(searchTerms).every(val => val === null || val === '');\n  };\n\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n      values: []\n    };\n\n    if (!hasEmptyValues(searchTerms)) {\n      (0, _logger.logInfo)(\"Building query parameters\");\n      let whereClause = ' WHERE ';\n      Object.entries(searchTerms).map(([column, value], index) => {\n        console.log(`${index}: ${column} => ${value}`);\n\n        if (!(value === null || value === '')) {\n          query.values.push(value);\n\n          if (whereClause !== ' WHERE ') {\n            whereClause += ` AND `;\n          }\n\n          switch (column) {\n            case 'topic_id':\n              whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`;\n              break;\n\n            default:\n              whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`;\n          }\n        }\n      });\n      (0, _logger.logInfo)(`Built ${whereClause}`);\n      query.text += whereClause;\n      (0, _logger.logInfo)(\"Query values: \", query.values);\n    }\n\n    (0, _logger.logInfo)(\"Preparing to make query\", {\n      queryText: query.text\n    });\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n\nconst updateTopicByName = async (id, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n      values: [name, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateTopicByName = updateTopicByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "connectionString",
        "process",
        "env",
        "DB_CONNECTION",
        "postgresPool",
        "Pool",
        "getFlashcardByName",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "count",
        "rows",
        "getTopicCountByName",
        "getTopicsByName",
        "insertFlashcard",
        "term",
        "definition",
        "topic",
        "console",
        "log",
        "rowCount",
        "insertTopic",
        "colour",
        "removeFlashcard",
        "id",
        "removeTopic",
        "getTopics",
        "getFlashcards",
        "searchTerms",
        "hasEmptyValues",
        "Object",
        "every",
        "val",
        "whereClause",
        "entries",
        "map",
        "column",
        "value",
        "index",
        "push",
        "length",
        "queryText",
        "updateFlashcardDefinition",
        "updateTopicByName"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst connectionString = process.env.DB_CONNECTION\n\nlogInfo(`Connecting to: ${connectionString}`)\nconst postgresPool = new Pool({\n    connectionString: connectionString,\n})\n\nexport const getFlashcardByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicCountByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicsByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Making connectiong to database\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT * FROM flashcards_app.topics WHERE name like $1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const insertFlashcard = async (term, definition, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.flashcards(term, definition, topic_id, name, created, updated) VALUES($1, $2, $3, $4, NOW(), NOW())',\n                values: [term, definition, topic, name]\n            }\n\n            logInfo(`Making query: ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                console.log(queryError)\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return null\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const insertTopic = async (name, colour) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to insert topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            logInfo(\"Connected to Data successfully\")\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n                values: [name, colour]\n            }\n\n            logInfo(`Making query ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(`Received result: ${result.rowCount}`)\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const removeTopic = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.topics where topic_id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getTopics = async () => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to get topics\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n\n        const hasEmptyValues = (searchTerms) => {\n            console.log(\"Checking empty values for: \", searchTerms)\n            return Object.values(searchTerms).every((val) => (val === null || val === ''))\n        }\n\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `SELECT id, flashcards_app.topics.name as topic_name, term, definition, colour FROM flashcards_app.flashcards INNER JOIN flashcards_app.topics ON flashcards_app.topics.topic_id = flashcards_app.flashcards.topic_id`,\n                values: []\n            }\n\n            if (!hasEmptyValues(searchTerms)){\n                logInfo(\"Building query parameters\")\n                let whereClause = ' WHERE '\n                Object.entries(searchTerms).map(([column, value], index) => {\n                    console.log(`${index}: ${column} => ${value}`)\n                    if (!(value === null || value === '')){\n                        query.values.push(value)\n                        if (whereClause !== ' WHERE '){\n                            whereClause += ` AND `\n                        }\n\n                        switch(column) {\n                            case 'topic_id':\n                                whereClause += `flashcards_app.flashcards.${column} = $${query.values.length}`\n                                break;\n                            default:\n                                whereClause += `flashcards_app.flashcards.${column} like $${query.values.length}`\n                        }\n                    }\n                })\n                logInfo(`Built ${whereClause}`)\n                query.text += whereClause\n                logInfo(\"Query values: \", query.values)\n            }\n\n            logInfo(\"Preparing to make query\", {queryText: query.text})\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const updateTopicByName = async (id, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.topics\n                    SET name = $1,\n                    updated = NOW()\n                    WHERE topic_id = $2`,\n                values: [name, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574770918000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  }
}