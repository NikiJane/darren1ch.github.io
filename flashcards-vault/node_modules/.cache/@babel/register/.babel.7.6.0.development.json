{
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express, { json } from 'express';\nimport correlationMiddleware from 'middleware/correlationMiddleware';\nimport authorisationMiddleware from 'middleware/authorisationMiddleware';\nimport { routes } from 'routes';\nimport logger from 'logging/logger';\nimport requestLogger from 'logging/requestLogger';\nconst port = 4000;\nexpress().use(requestLogger).use(json()).use(correlationMiddleware).get('/healthcheck', (_, response) => response.send()).use(authorisationMiddleware).use('/v1', routes).listen(port, '0.0.0.0', err => {\n  if (err) {\n    logger.error(err);\n    return;\n  }\n\n  logger.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwianNvbiIsImNvcnJlbGF0aW9uTWlkZGxld2FyZSIsImF1dGhvcmlzYXRpb25NaWRkbGV3YXJlIiwicm91dGVzIiwibG9nZ2VyIiwicmVxdWVzdExvZ2dlciIsInBvcnQiLCJ1c2UiLCJnZXQiLCJfIiwicmVzcG9uc2UiLCJzZW5kIiwibGlzdGVuIiwiZXJyIiwiZXJyb3IiLCJpbmZvIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLElBQWtCQyxJQUFsQixRQUE4QixTQUE5QjtBQUNBLE9BQU9DLHFCQUFQLE1BQWtDLGtDQUFsQztBQUNBLE9BQU9DLHVCQUFQLE1BQW9DLG9DQUFwQztBQUNBLFNBQVNDLE1BQVQsUUFBdUIsUUFBdkI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGdCQUFuQjtBQUNBLE9BQU9DLGFBQVAsTUFBMEIsdUJBQTFCO0FBRUEsTUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQVAsT0FBTyxHQUNKUSxHQURILENBQ09GLGFBRFAsRUFFR0UsR0FGSCxDQUVPUCxJQUFJLEVBRlgsRUFHR08sR0FISCxDQUdPTixxQkFIUCxFQUlHTyxHQUpILENBSU8sY0FKUCxFQUl1QixDQUFDQyxDQUFELEVBQUlDLFFBQUosS0FBaUJBLFFBQVEsQ0FBQ0MsSUFBVCxFQUp4QyxFQUtHSixHQUxILENBS09MLHVCQUxQLEVBTUdLLEdBTkgsQ0FNTyxLQU5QLEVBTWNKLE1BTmQsRUFPR1MsTUFQSCxDQU9VTixJQVBWLEVBT2dCLFNBUGhCLEVBTzRCTyxHQUFELElBQVM7QUFDaEMsTUFBSUEsR0FBSixFQUFTO0FBQ1BULElBQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhRCxHQUFiO0FBQ0E7QUFDRDs7QUFDRFQsRUFBQUEsTUFBTSxDQUFDVyxJQUFQLENBQWEsOEJBQTZCVCxJQUFLLEdBQS9DO0FBQ0QsQ0FiSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IGpzb24gfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnJlbGF0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2NvcnJlbGF0aW9uTWlkZGxld2FyZSdcbmltcG9ydCBhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2F1dGhvcmlzYXRpb25NaWRkbGV3YXJlJ1xuaW1wb3J0IHsgcm91dGVzIH0gZnJvbSAncm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICdsb2dnaW5nL2xvZ2dlcidcbmltcG9ydCByZXF1ZXN0TG9nZ2VyIGZyb20gJ2xvZ2dpbmcvcmVxdWVzdExvZ2dlcidcblxuY29uc3QgcG9ydCA9IDQwMDBcblxuZXhwcmVzcygpXG4gIC51c2UocmVxdWVzdExvZ2dlcilcbiAgLnVzZShqc29uKCkpXG4gIC51c2UoY29ycmVsYXRpb25NaWRkbGV3YXJlKVxuICAuZ2V0KCcvaGVhbHRoY2hlY2snLCAoXywgcmVzcG9uc2UpID0+IHJlc3BvbnNlLnNlbmQoKSlcbiAgLnVzZShhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSlcbiAgLnVzZSgnL3YxJywgcm91dGVzKVxuICAubGlzdGVuKHBvcnQsICcwLjAuMC4wJywgKGVycikgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGxvZ2dlci5lcnJvcihlcnIpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgbG9nZ2VyLmluZm8oYFN0YXJ0ZWQuIExpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0uYClcbiAgfSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "json",
        "correlationMiddleware",
        "authorisationMiddleware",
        "routes",
        "logger",
        "requestLogger",
        "port",
        "use",
        "get",
        "_",
        "response",
        "send",
        "listen",
        "err",
        "error",
        "info"
      ],
      "mappings": "AAAA,OAAOA,OAAP,IAAkBC,IAAlB,QAA8B,SAA9B;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,IAAI,GAAG,IAAb;AAEAP,OAAO,GACJQ,GADH,CACOF,aADP,EAEGE,GAFH,CAEOP,IAAI,EAFX,EAGGO,GAHH,CAGON,qBAHP,EAIGO,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGJ,GALH,CAKOL,uBALP,EAMGK,GANH,CAMO,KANP,EAMcJ,MANd,EAOGS,MAPH,CAOUN,IAPV,EAOgB,SAPhB,EAO4BO,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPT,IAAAA,MAAM,CAACU,KAAP,CAAaD,GAAb;AACA;AACD;;AACDT,EAAAA,MAAM,CAACW,IAAP,CAAa,8BAA6BT,IAAK,GAA/C;AACD,CAbH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport correlationMiddleware from 'middleware/correlationMiddleware'\nimport authorisationMiddleware from 'middleware/authorisationMiddleware'\nimport { routes } from 'routes'\nimport logger from 'logging/logger'\nimport requestLogger from 'logging/requestLogger'\n\nconst port = 4000\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(correlationMiddleware)\n  .get('/healthcheck', (_, response) => response.send())\n  .use(authorisationMiddleware)\n  .use('/v1', routes)\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567886040000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _logger = _interopRequireDefault(require(\"./logging/logger\"));\n\nvar _requestLogger = _interopRequireDefault(require(\"./logging/requestLogger\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst port = 4000;\n(0, _express.default)().use(_requestLogger.default).use((0, _express.json)()).use((0, _cors.default)()).get('/healthcheck', (_, response) => response.send()).use('/v1', _routes.default).listen(port, '0.0.0.0', err => {\n  if (err) {\n    _logger.default.error(err);\n\n    return;\n  }\n\n  _logger.default.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwb3J0IiwidXNlIiwicmVxdWVzdExvZ2dlciIsImdldCIsIl8iLCJyZXNwb25zZSIsInNlbmQiLCJyb3V0ZXMiLCJsaXN0ZW4iLCJlcnIiLCJsb2dnZXIiLCJlcnJvciIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHLElBQWI7QUFFQSx3QkFDR0MsR0FESCxDQUNPQyxzQkFEUCxFQUVHRCxHQUZILENBRU8sb0JBRlAsRUFHR0EsR0FISCxDQUdPLG9CQUhQLEVBSUdFLEdBSkgsQ0FJTyxjQUpQLEVBSXVCLENBQUNDLENBQUQsRUFBSUMsUUFBSixLQUFpQkEsUUFBUSxDQUFDQyxJQUFULEVBSnhDLEVBS0dMLEdBTEgsQ0FLTyxLQUxQLEVBS2NNLGVBTGQsRUFNR0MsTUFOSCxDQU1VUixJQU5WLEVBTWdCLFNBTmhCLEVBTTRCUyxHQUFELElBQVM7QUFDaEMsTUFBSUEsR0FBSixFQUFTO0FBQ1BDLG9CQUFPQyxLQUFQLENBQWFGLEdBQWI7O0FBQ0E7QUFDRDs7QUFDREMsa0JBQU9FLElBQVAsQ0FBYSw4QkFBNkJaLElBQUssR0FBL0M7QUFDRCxDQVpIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dpbmcvbG9nZ2VyJ1xuaW1wb3J0IHJlcXVlc3RMb2dnZXIgZnJvbSAnLi9sb2dnaW5nL3JlcXVlc3RMb2dnZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuXG5jb25zdCBwb3J0ID0gNDAwMFxuXG5leHByZXNzKClcbiAgLnVzZShyZXF1ZXN0TG9nZ2VyKVxuICAudXNlKGpzb24oKSlcbiAgLnVzZShjb3JzKCkpXG4gIC5nZXQoJy9oZWFsdGhjaGVjaycsIChfLCByZXNwb25zZSkgPT4gcmVzcG9uc2Uuc2VuZCgpKVxuICAudXNlKCcvdjEnLCByb3V0ZXMpXG4gIC5saXN0ZW4ocG9ydCwgJzAuMC4wLjAnLCAoZXJyKSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgbG9nZ2VyLmVycm9yKGVycilcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBsb2dnZXIuaW5mbyhgU3RhcnRlZC4gTGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fS5gKVxuICB9KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "port",
        "use",
        "requestLogger",
        "get",
        "_",
        "response",
        "send",
        "routes",
        "listen",
        "err",
        "logger",
        "error",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,IAAI,GAAG,IAAb;AAEA,wBACGC,GADH,CACOC,sBADP,EAEGD,GAFH,CAEO,oBAFP,EAGGA,GAHH,CAGO,oBAHP,EAIGE,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGL,GALH,CAKO,KALP,EAKcM,eALd,EAMGC,MANH,CAMUR,IANV,EAMgB,SANhB,EAM4BS,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPC,oBAAOC,KAAP,CAAaF,GAAb;;AACA;AACD;;AACDC,kBAAOE,IAAP,CAAa,8BAA6BZ,IAAK,GAA/C;AACD,CAZH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport routes from './routes'\nimport logger from './logging/logger'\nimport requestLogger from './logging/requestLogger'\nimport cors from 'cors'\n\nconst port = 4000\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(cors())\n  .get('/healthcheck', (_, response) => response.send())\n  .use('/v1', routes)\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569247059000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/create', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).post('/update/:id', _controller.updateFlashcard).get('/listTopics', _controller.listTopics);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlRmxhc2hjYXJkIiwibGlzdEZsYXNoY2FyZHMiLCJkZWxldGUiLCJkZWxldGVGbGFzaGNhcmQiLCJ1cGRhdGVGbGFzaGNhcmQiLCJnZXQiLCJsaXN0VG9waWNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsTUFBTUEsTUFBTSxHQUFHLHVCQUNWQyxJQURVLENBQ0wsU0FESyxFQUNNQywyQkFETixFQUVWRCxJQUZVLENBRUwsT0FGSyxFQUVJRSwwQkFGSixFQUdWQyxNQUhVLENBR0gsYUFIRyxFQUdZQywyQkFIWixFQUlWSixJQUpVLENBSUwsYUFKSyxFQUlVSywyQkFKVixFQUtWQyxHQUxVLENBS04sYUFMTSxFQUtTQyxzQkFMVCxDQUFmO2VBT2VSLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2NoaG8vRG9jdW1lbnRzLzAyX1BlcnNvbmFsLzAxX1BlcnNvbmFsIFByb2plY3RzL2ZsYXNoY2FyZHMtYXBwL2ZsYXNoY2FyZHMtdmF1bHQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHsgY3JlYXRlRmxhc2hjYXJkLCB1cGRhdGVGbGFzaGNhcmQsIGRlbGV0ZUZsYXNoY2FyZCwgbGlzdEZsYXNoY2FyZHMsIGxpc3RUb3BpY3MgfSBmcm9tICcuL2NvbnRyb2xsZXInXG5cbmNvbnN0IHJvdXRlcyA9IFJvdXRlcigpXG4gICAgLnBvc3QoJy9jcmVhdGUnLCBjcmVhdGVGbGFzaGNhcmQpXG4gICAgLnBvc3QoJy9saXN0JywgbGlzdEZsYXNoY2FyZHMpXG4gICAgLmRlbGV0ZSgnL2RlbGV0ZS86aWQnLCBkZWxldGVGbGFzaGNhcmQpXG4gICAgLnBvc3QoJy91cGRhdGUvOmlkJywgdXBkYXRlRmxhc2hjYXJkKVxuICAgIC5nZXQoJy9saXN0VG9waWNzJywgbGlzdFRvcGljcylcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVzXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "updateFlashcard",
        "get",
        "listTopics"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,SADK,EACMC,2BADN,EAEVD,IAFU,CAEL,OAFK,EAEIE,0BAFJ,EAGVC,MAHU,CAGH,aAHG,EAGYC,2BAHZ,EAIVJ,IAJU,CAIL,aAJK,EAIUK,2BAJV,EAKVC,GALU,CAKN,aALM,EAKSC,sBALT,CAAf;eAOeR,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { createFlashcard, updateFlashcard, deleteFlashcard, listFlashcards, listTopics } from './controller'\n\nconst routes = Router()\n    .post('/create', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .post('/update/:id', updateFlashcard)\n    .get('/listTopics', listTopics)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568996397000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listTopics = exports.listFlashcards = exports.deleteFlashcard = exports.updateFlashcard = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  const flashcardData = {\n    term,\n    definition\n  };\n  (0, _logger.logInfo)(\"Checking flashcard exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getFlashcardByName)(name);\n    (0, _logger.logInfo)(`Got result of flashcard check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n  }\n\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    flashcardData,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(flashcardData, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n\nconst listTopics = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopics)();\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listTopics = listTopics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "flashcardData",
        "dbResponse",
        "sendStatus",
        "err",
        "stack",
        "updateFlashcard",
        "id",
        "params",
        "deleteFlashcard",
        "listFlashcards",
        "searchTerms",
        "status",
        "send",
        "listTopics"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    updateFlashcardDefinition,\n    getFlashcardByName,\n    getTopics\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    const flashcardData = { term, definition }\n\n    logInfo(\"Checking flashcard exists in Database\")\n    try {\n        const dbResponse = await getFlashcardByName(name)\n        logInfo(`Got result of flashcard check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n    } catch (err) {\n        logError(err.stack)\n    }\n\n    logInfo(\"Inserting into database \", {flashcardData, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(flashcardData, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n    }\n}\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term} = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const listTopics = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopics()\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1568996534000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/createTopic', _controller.createTopic).post('/createFlashcard', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).post('/update/:id', _controller.updateFlashcard).get('/listTopics', _controller.listTopics);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlVG9waWMiLCJjcmVhdGVGbGFzaGNhcmQiLCJsaXN0Rmxhc2hjYXJkcyIsImRlbGV0ZSIsImRlbGV0ZUZsYXNoY2FyZCIsInVwZGF0ZUZsYXNoY2FyZCIsImdldCIsImxpc3RUb3BpY3MiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFTQSxNQUFNQSxNQUFNLEdBQUcsdUJBQ1ZDLElBRFUsQ0FDTCxjQURLLEVBQ1dDLHVCQURYLEVBRVZELElBRlUsQ0FFTCxrQkFGSyxFQUVlRSwyQkFGZixFQUdWRixJQUhVLENBR0wsT0FISyxFQUdJRywwQkFISixFQUlWQyxNQUpVLENBSUgsYUFKRyxFQUlZQywyQkFKWixFQUtWTCxJQUxVLENBS0wsYUFMSyxFQUtVTSwyQkFMVixFQU1WQyxHQU5VLENBTU4sYUFOTSxFQU1TQyxzQkFOVCxDQUFmO2VBUWVULE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2NoaG8vRG9jdW1lbnRzLzAyX1BlcnNvbmFsLzAxX1BlcnNvbmFsIFByb2plY3RzL2ZsYXNoY2FyZHMtYXBwL2ZsYXNoY2FyZHMtdmF1bHQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHtcbiAgICBjcmVhdGVGbGFzaGNhcmQsXG4gICAgdXBkYXRlRmxhc2hjYXJkLFxuICAgIGRlbGV0ZUZsYXNoY2FyZCxcbiAgICBsaXN0Rmxhc2hjYXJkcyxcbiAgICBsaXN0VG9waWNzLFxuICAgIGNyZWF0ZVRvcGljXG59IGZyb20gJy4vY29udHJvbGxlcidcblxuY29uc3Qgcm91dGVzID0gUm91dGVyKClcbiAgICAucG9zdCgnL2NyZWF0ZVRvcGljJywgY3JlYXRlVG9waWMpXG4gICAgLnBvc3QoJy9jcmVhdGVGbGFzaGNhcmQnLCBjcmVhdGVGbGFzaGNhcmQpXG4gICAgLnBvc3QoJy9saXN0JywgbGlzdEZsYXNoY2FyZHMpXG4gICAgLmRlbGV0ZSgnL2RlbGV0ZS86aWQnLCBkZWxldGVGbGFzaGNhcmQpXG4gICAgLnBvc3QoJy91cGRhdGUvOmlkJywgdXBkYXRlRmxhc2hjYXJkKVxuICAgIC5nZXQoJy9saXN0VG9waWNzJywgbGlzdFRvcGljcylcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVzXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createTopic",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "updateFlashcard",
        "get",
        "listTopics"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AASA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,cADK,EACWC,uBADX,EAEVD,IAFU,CAEL,kBAFK,EAEeE,2BAFf,EAGVF,IAHU,CAGL,OAHK,EAGIG,0BAHJ,EAIVC,MAJU,CAIH,aAJG,EAIYC,2BAJZ,EAKVL,IALU,CAKL,aALK,EAKUM,2BALV,EAMVC,GANU,CAMN,aANM,EAMSC,sBANT,CAAf;eAQeT,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport {\n    createFlashcard,\n    updateFlashcard,\n    deleteFlashcard,\n    listFlashcards,\n    listTopics,\n    createTopic\n} from './controller'\n\nconst routes = Router()\n    .post('/createTopic', createTopic)\n    .post('/createFlashcard', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .post('/update/:id', updateFlashcard)\n    .get('/listTopics', listTopics)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569419697000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listTopics = exports.listFlashcards = exports.deleteFlashcard = exports.updateFlashcard = exports.createTopic = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  const flashcardData = {\n    term,\n    definition\n  };\n  (0, _logger.logInfo)(\"Checking flashcard exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getFlashcardByName)(name);\n    (0, _logger.logInfo)(`Got result of flashcard check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n\n    if (!dbResponse) {\n      (0, _logger.logError)(\"Something major went wrong\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    flashcardData,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(flashcardData, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst createTopic = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    colour\n  } = data;\n  (0, _logger.logInfo)(\"Checking topic exists in Database\");\n\n  try {\n    const dbResponse = await (0, _data.getTopicByName)(name);\n    (0, _logger.logInfo)(`Got result of topic check: ${dbResponse}`);\n\n    if (dbResponse > 0) {\n      (0, _logger.logInfo)(\"Flashcard with that name already exists\");\n      return response.sendStatus(409);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err.stack);\n    return response.sendStatus(503);\n  }\n\n  (0, _logger.logInfo)(\"Inserting topic into database \", {\n    name,\n    colour\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertTopic)(name, colour);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.createTopic = createTopic;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n\nconst listTopics = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getTopics)();\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listTopics = listTopics;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "flashcardData",
        "dbResponse",
        "sendStatus",
        "err",
        "stack",
        "createTopic",
        "colour",
        "updateFlashcard",
        "id",
        "params",
        "deleteFlashcard",
        "listFlashcards",
        "searchTerms",
        "status",
        "send",
        "listTopics"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    updateFlashcardDefinition,\n    getFlashcardByName,\n    getTopics,\n    getTopicByName,\n    insertTopic\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    const flashcardData = { term, definition }\n\n    logInfo(\"Checking flashcard exists in Database\")\n\n    try {\n        const dbResponse = await getFlashcardByName(name)\n        logInfo(`Got result of flashcard check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n\n        if (!dbResponse){\n            logError(\"Something major went wrong\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n\n    }\n\n    logInfo(\"Inserting into database \", {flashcardData, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(flashcardData, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n\n    }\n}\n\nexport const createTopic = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, colour} = data\n\n    logInfo(\"Checking topic exists in Database\")\n\n    try {\n        const dbResponse = await getTopicByName(name)\n        logInfo(`Got result of topic check: ${dbResponse}`)\n\n        if (dbResponse > 0) {\n            logInfo(\"Flashcard with that name already exists\")\n            return response.sendStatus(409)\n        }\n    } catch (err) {\n        logError(err.stack)\n        return response.sendStatus(503)\n    }\n\n    logInfo(\"Inserting topic into database \", {name, colour})\n\n    try {\n        const dbResponse = await insertTopic(name, colour)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term } = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}\n\nexport const listTopics = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getTopics()\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570377339000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFlashcardDefinition = exports.getFlashcards = exports.getTopics = exports.removeFlashcard = exports.insertTopic = exports.insertFlashcard = exports.getTopicByName = exports.getFlashcardByName = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst postgresPool = new _pg.Pool({\n  host: 'localhost',\n  user: 'postgres',\n  password: 'testpassword',\n  database: 'postgres'\n});\n\nconst getFlashcardByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getFlashcardByName = getFlashcardByName;\n\nconst getTopicByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getTopicByName = getTopicByName;\n\nconst insertFlashcard = async (data, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards_app.flashcards(data, topic_id, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n      values: [data, topic, name]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n      console.log(queryError);\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return null;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst insertTopic = async (name, colour) => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to insert topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    (0, _logger.logInfo)(\"Connected to Data successfully\");\n    const query = {\n      text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n      values: [name, colour]\n    };\n    (0, _logger.logInfo)(`Making query ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(`Received result: ${result.rowCount}`);\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertTopic = insertTopic;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst getTopics = async () => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to get topics\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT id, name, colour FROM flashcards_app.topics'\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopics = getTopics;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT id, data from flashcards_app.flashcards ',\n      values: []\n    };\n    (0, _logger.logInfo)(\"Building query paramters\");\n    Object.entries(searchTerms).map(([column, value]) => {\n      console.log(`${column} => ${value}`);\n\n      if (value) {\n        return concat(`${column} like ${value}`);\n      }\n    });\n    (0, _logger.logInfo)(query);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "postgresPool",
        "Pool",
        "host",
        "user",
        "password",
        "database",
        "getFlashcardByName",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "count",
        "rows",
        "getTopicByName",
        "insertFlashcard",
        "data",
        "topic",
        "console",
        "log",
        "rowCount",
        "insertTopic",
        "colour",
        "removeFlashcard",
        "id",
        "getTopics",
        "getFlashcards",
        "searchTerms",
        "Object",
        "entries",
        "map",
        "column",
        "value",
        "concat",
        "updateFlashcardDefinition",
        "definition"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst postgresPool = new Pool({\n    host: 'localhost',\n    user: 'postgres',\n    password: 'testpassword',\n    database: 'postgres'\n})\n\nexport const getFlashcardByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const insertFlashcard = async (data, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.flashcards(data, topic_id, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n                values: [data, topic, name]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                console.log(queryError)\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return null\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const insertTopic = async (name, colour) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to insert topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            logInfo(\"Connected to Data successfully\")\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n                values: [name, colour]\n            }\n\n            logInfo(`Making query ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(`Received result: ${result.rowCount}`)\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getTopics = async () => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to get topics\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT id, name, colour FROM flashcards_app.topics'\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT id, data from flashcards_app.flashcards ',\n                values: []\n            }\n\n            logInfo(\"Building query paramters\")\n\n            Object.entries(searchTerms).map(([column, value]) => {\n                console.log(`${column} => ${value}`)\n                if (value){\n                    return concat(`${column} like ${value}`)\n                }\n            })\n\n            logInfo(query)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570377318000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFlashcardDefinition = exports.getFlashcards = exports.getTopics = exports.removeFlashcard = exports.insertTopic = exports.insertFlashcard = exports.getTopicByName = exports.getFlashcardByName = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst postgresPool = new _pg.Pool({\n  host: 'localhost',\n  user: 'postgres',\n  password: 'testpassword',\n  database: 'postgres'\n});\n\nconst getFlashcardByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getFlashcardByName = getFlashcardByName;\n\nconst getTopicByName = async name => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n      values: [name]\n    };\n    (0, _logger.logInfo)(\"Performing query\", query.text);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received result\", {\n        count: result.rows\n      });\n      resolve(result.rows[0].count);\n    });\n  });\n});\n\nexports.getTopicByName = getTopicByName;\n\nconst insertFlashcard = async (data, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards_app.flashcards(data, topic_id, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n      values: [data, topic, name]\n    };\n    (0, _logger.logInfo)(`Making query: ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n      console.log(queryError);\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return null;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst insertTopic = async (name, colour) => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to insert topic\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    (0, _logger.logInfo)(\"Connected to Data successfully\");\n    const query = {\n      text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n      values: [name, colour]\n    };\n    (0, _logger.logInfo)(`Making query ${query.text}`);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(`Received result: ${result.rowCount}`);\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertTopic = insertTopic;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst getTopics = async () => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to get topics\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getTopics = getTopics;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT id, data from flashcards_app.flashcards ',\n      values: []\n    };\n    (0, _logger.logInfo)(\"Building query paramters\");\n    Object.entries(searchTerms).map(([column, value]) => {\n      console.log(`${column} => ${value}`);\n\n      if (value) {\n        return concat(`${column} like ${value}`);\n      }\n    });\n    (0, _logger.logInfo)(query);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "postgresPool",
        "Pool",
        "host",
        "user",
        "password",
        "database",
        "getFlashcardByName",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "count",
        "rows",
        "getTopicByName",
        "insertFlashcard",
        "data",
        "topic",
        "console",
        "log",
        "rowCount",
        "insertTopic",
        "colour",
        "removeFlashcard",
        "id",
        "getTopics",
        "getFlashcards",
        "searchTerms",
        "Object",
        "entries",
        "map",
        "column",
        "value",
        "concat",
        "updateFlashcardDefinition",
        "definition"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst postgresPool = new Pool({\n    host: 'localhost',\n    user: 'postgres',\n    password: 'testpassword',\n    database: 'postgres'\n})\n\nexport const getFlashcardByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.flashcards WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const getTopicByName = async ( name ) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT COUNT(*) FROM flashcards_app.topics WHERE name=$1',\n                values: [name]\n            }\n\n            logInfo(\"Performing query\", query.text)\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received result\", {count: result.rows})\n                resolve(result.rows[0].count)\n            })\n        })\n    }\n)\n\nexport const insertFlashcard = async (data, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.flashcards(data, topic_id, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n                values: [data, topic, name]\n            }\n\n            logInfo(`Making query: ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                console.log(queryError)\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return null\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const insertTopic = async (name, colour) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to insert topic\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            logInfo(\"Connected to Data successfully\")\n\n            const query = {\n                text: 'INSERT INTO flashcards_app.topics(name, colour, created, updated) VALUES($1, $2, NOW(), NOW())',\n                values: [name, colour]\n            }\n\n            logInfo(`Making query ${query.text}`)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(`Received result: ${result.rowCount}`)\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards_app.flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getTopics = async () => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to get topics\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT topic_id, name, colour FROM flashcards_app.topics'\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT id, data from flashcards_app.flashcards ',\n                values: []\n            }\n\n            logInfo(\"Building query paramters\")\n\n            Object.entries(searchTerms).map(([column, value]) => {\n                console.log(`${column} => ${value}`)\n                if (value){\n                    return concat(`${column} like ${value}`)\n                }\n            })\n\n            logInfo(query)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards_app.flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570618868000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  }
}