{
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "import express, { json } from 'express';\nimport correlationMiddleware from 'middleware/correlationMiddleware';\nimport authorisationMiddleware from 'middleware/authorisationMiddleware';\nimport { routes } from 'routes';\nimport logger from 'logging/logger';\nimport requestLogger from 'logging/requestLogger';\nconst port = 4000;\nexpress().use(requestLogger).use(json()).use(correlationMiddleware).get('/healthcheck', (_, response) => response.send()).use(authorisationMiddleware).use('/v1', routes).listen(port, '0.0.0.0', err => {\n  if (err) {\n    logger.error(err);\n    return;\n  }\n\n  logger.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwianNvbiIsImNvcnJlbGF0aW9uTWlkZGxld2FyZSIsImF1dGhvcmlzYXRpb25NaWRkbGV3YXJlIiwicm91dGVzIiwibG9nZ2VyIiwicmVxdWVzdExvZ2dlciIsInBvcnQiLCJ1c2UiLCJnZXQiLCJfIiwicmVzcG9uc2UiLCJzZW5kIiwibGlzdGVuIiwiZXJyIiwiZXJyb3IiLCJpbmZvIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLElBQWtCQyxJQUFsQixRQUE4QixTQUE5QjtBQUNBLE9BQU9DLHFCQUFQLE1BQWtDLGtDQUFsQztBQUNBLE9BQU9DLHVCQUFQLE1BQW9DLG9DQUFwQztBQUNBLFNBQVNDLE1BQVQsUUFBdUIsUUFBdkI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGdCQUFuQjtBQUNBLE9BQU9DLGFBQVAsTUFBMEIsdUJBQTFCO0FBRUEsTUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQVAsT0FBTyxHQUNKUSxHQURILENBQ09GLGFBRFAsRUFFR0UsR0FGSCxDQUVPUCxJQUFJLEVBRlgsRUFHR08sR0FISCxDQUdPTixxQkFIUCxFQUlHTyxHQUpILENBSU8sY0FKUCxFQUl1QixDQUFDQyxDQUFELEVBQUlDLFFBQUosS0FBaUJBLFFBQVEsQ0FBQ0MsSUFBVCxFQUp4QyxFQUtHSixHQUxILENBS09MLHVCQUxQLEVBTUdLLEdBTkgsQ0FNTyxLQU5QLEVBTWNKLE1BTmQsRUFPR1MsTUFQSCxDQU9VTixJQVBWLEVBT2dCLFNBUGhCLEVBTzRCTyxHQUFELElBQVM7QUFDaEMsTUFBSUEsR0FBSixFQUFTO0FBQ1BULElBQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhRCxHQUFiO0FBQ0E7QUFDRDs7QUFDRFQsRUFBQUEsTUFBTSxDQUFDVyxJQUFQLENBQWEsOEJBQTZCVCxJQUFLLEdBQS9DO0FBQ0QsQ0FiSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IGpzb24gfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnJlbGF0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2NvcnJlbGF0aW9uTWlkZGxld2FyZSdcbmltcG9ydCBhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSBmcm9tICdtaWRkbGV3YXJlL2F1dGhvcmlzYXRpb25NaWRkbGV3YXJlJ1xuaW1wb3J0IHsgcm91dGVzIH0gZnJvbSAncm91dGVzJ1xuaW1wb3J0IGxvZ2dlciBmcm9tICdsb2dnaW5nL2xvZ2dlcidcbmltcG9ydCByZXF1ZXN0TG9nZ2VyIGZyb20gJ2xvZ2dpbmcvcmVxdWVzdExvZ2dlcidcblxuY29uc3QgcG9ydCA9IDQwMDBcblxuZXhwcmVzcygpXG4gIC51c2UocmVxdWVzdExvZ2dlcilcbiAgLnVzZShqc29uKCkpXG4gIC51c2UoY29ycmVsYXRpb25NaWRkbGV3YXJlKVxuICAuZ2V0KCcvaGVhbHRoY2hlY2snLCAoXywgcmVzcG9uc2UpID0+IHJlc3BvbnNlLnNlbmQoKSlcbiAgLnVzZShhdXRob3Jpc2F0aW9uTWlkZGxld2FyZSlcbiAgLnVzZSgnL3YxJywgcm91dGVzKVxuICAubGlzdGVuKHBvcnQsICcwLjAuMC4wJywgKGVycikgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGxvZ2dlci5lcnJvcihlcnIpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgbG9nZ2VyLmluZm8oYFN0YXJ0ZWQuIExpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0uYClcbiAgfSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "json",
        "correlationMiddleware",
        "authorisationMiddleware",
        "routes",
        "logger",
        "requestLogger",
        "port",
        "use",
        "get",
        "_",
        "response",
        "send",
        "listen",
        "err",
        "error",
        "info"
      ],
      "mappings": "AAAA,OAAOA,OAAP,IAAkBC,IAAlB,QAA8B,SAA9B;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,IAAI,GAAG,IAAb;AAEAP,OAAO,GACJQ,GADH,CACOF,aADP,EAEGE,GAFH,CAEOP,IAAI,EAFX,EAGGO,GAHH,CAGON,qBAHP,EAIGO,GAJH,CAIO,cAJP,EAIuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAJxC,EAKGJ,GALH,CAKOL,uBALP,EAMGK,GANH,CAMO,KANP,EAMcJ,MANd,EAOGS,MAPH,CAOUN,IAPV,EAOgB,SAPhB,EAO4BO,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPT,IAAAA,MAAM,CAACU,KAAP,CAAaD,GAAb;AACA;AACD;;AACDT,EAAAA,MAAM,CAACW,IAAP,CAAa,8BAA6BT,IAAK,GAA/C;AACD,CAbH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport correlationMiddleware from 'middleware/correlationMiddleware'\nimport authorisationMiddleware from 'middleware/authorisationMiddleware'\nimport { routes } from 'routes'\nimport logger from 'logging/logger'\nimport requestLogger from 'logging/requestLogger'\n\nconst port = 4000\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .use(correlationMiddleware)\n  .get('/healthcheck', (_, response) => response.send())\n  .use(authorisationMiddleware)\n  .use('/v1', routes)\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1567886040000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _logger = _interopRequireDefault(require(\"./logging/logger\"));\n\nvar _requestLogger = _interopRequireDefault(require(\"./logging/requestLogger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst port = 4000;\n(0, _express.default)().use(_requestLogger.default).use((0, _express.json)()).get('/healthcheck', (_, response) => response.send()).use('/v1', _routes.default).listen(port, '0.0.0.0', err => {\n  if (err) {\n    _logger.default.error(err);\n\n    return;\n  }\n\n  _logger.default.info(`Started. Listening on port ${port}.`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwb3J0IiwidXNlIiwicmVxdWVzdExvZ2dlciIsImdldCIsIl8iLCJyZXNwb25zZSIsInNlbmQiLCJyb3V0ZXMiLCJsaXN0ZW4iLCJlcnIiLCJsb2dnZXIiLCJlcnJvciIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsTUFBTUEsSUFBSSxHQUFHLElBQWI7QUFFQSx3QkFDR0MsR0FESCxDQUNPQyxzQkFEUCxFQUVHRCxHQUZILENBRU8sb0JBRlAsRUFHR0UsR0FISCxDQUdPLGNBSFAsRUFHdUIsQ0FBQ0MsQ0FBRCxFQUFJQyxRQUFKLEtBQWlCQSxRQUFRLENBQUNDLElBQVQsRUFIeEMsRUFJR0wsR0FKSCxDQUlPLEtBSlAsRUFJY00sZUFKZCxFQUtHQyxNQUxILENBS1VSLElBTFYsRUFLZ0IsU0FMaEIsRUFLNEJTLEdBQUQsSUFBUztBQUNoQyxNQUFJQSxHQUFKLEVBQVM7QUFDUEMsb0JBQU9DLEtBQVAsQ0FBYUYsR0FBYjs7QUFDQTtBQUNEOztBQUNEQyxrQkFBT0UsSUFBUCxDQUFhLDhCQUE2QlosSUFBSyxHQUEvQztBQUNELENBWEgiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NoaG8vRG9jdW1lbnRzLzAyX1BlcnNvbmFsLzAxX1BlcnNvbmFsIFByb2plY3RzL2ZsYXNoY2FyZHMtYXBwL2ZsYXNoY2FyZHMtdmF1bHQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcywgeyBqc29uIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnXG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vbG9nZ2luZy9sb2dnZXInXG5pbXBvcnQgcmVxdWVzdExvZ2dlciBmcm9tICcuL2xvZ2dpbmcvcmVxdWVzdExvZ2dlcidcblxuY29uc3QgcG9ydCA9IDQwMDBcblxuZXhwcmVzcygpXG4gIC51c2UocmVxdWVzdExvZ2dlcilcbiAgLnVzZShqc29uKCkpXG4gIC5nZXQoJy9oZWFsdGhjaGVjaycsIChfLCByZXNwb25zZSkgPT4gcmVzcG9uc2Uuc2VuZCgpKVxuICAudXNlKCcvdjEnLCByb3V0ZXMpXG4gIC5saXN0ZW4ocG9ydCwgJzAuMC4wLjAnLCAoZXJyKSA9PiB7XG4gICAgaWYgKGVycikge1xuICAgICAgbG9nZ2VyLmVycm9yKGVycilcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBsb2dnZXIuaW5mbyhgU3RhcnRlZC4gTGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fS5gKVxuICB9KVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "port",
        "use",
        "requestLogger",
        "get",
        "_",
        "response",
        "send",
        "routes",
        "listen",
        "err",
        "logger",
        "error",
        "info"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,IAAI,GAAG,IAAb;AAEA,wBACGC,GADH,CACOC,sBADP,EAEGD,GAFH,CAEO,oBAFP,EAGGE,GAHH,CAGO,cAHP,EAGuB,CAACC,CAAD,EAAIC,QAAJ,KAAiBA,QAAQ,CAACC,IAAT,EAHxC,EAIGL,GAJH,CAIO,KAJP,EAIcM,eAJd,EAKGC,MALH,CAKUR,IALV,EAKgB,SALhB,EAK4BS,GAAD,IAAS;AAChC,MAAIA,GAAJ,EAAS;AACPC,oBAAOC,KAAP,CAAaF,GAAb;;AACA;AACD;;AACDC,kBAAOE,IAAP,CAAa,8BAA6BZ,IAAK,GAA/C;AACD,CAXH",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import express, { json } from 'express'\nimport routes from './routes'\nimport logger from './logging/logger'\nimport requestLogger from './logging/requestLogger'\n\nconst port = 4000\n\nexpress()\n  .use(requestLogger)\n  .use(json())\n  .get('/healthcheck', (_, response) => response.send())\n  .use('/v1', routes)\n  .listen(port, '0.0.0.0', (err) => {\n    if (err) {\n      logger.error(err)\n      return\n    }\n    logger.info(`Started. Listening on port ${port}.`)\n  })\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886677000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/create', _controller.createFlashcards); // .get('/view', getFlashcards)\n// .get('/delete', deleteFlashcards)\n// .get('/edit', editFlashCards)\n\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlRmxhc2hjYXJkcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLE1BQU1BLE1BQU0sR0FBRyx1QkFDVkMsSUFEVSxDQUNMLFNBREssRUFDTUMsNEJBRE4sQ0FBZixDLENBRUk7QUFDQTtBQUNBOztlQUVXRixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcydcbmltcG9ydCB7IGNyZWF0ZUZsYXNoY2FyZHMsIGVkaXRGbGFzaENhcmRzLCBkZWxldGVGbGFzaGNhcmRzLCBnZXRGbGFzaGNhcmRzIH0gZnJvbSAnLi9jb250cm9sbGVyJ1xuXG5jb25zdCByb3V0ZXMgPSBSb3V0ZXIoKVxuICAgIC5wb3N0KCcvY3JlYXRlJywgY3JlYXRlRmxhc2hjYXJkcylcbiAgICAvLyAuZ2V0KCcvdmlldycsIGdldEZsYXNoY2FyZHMpXG4gICAgLy8gLmdldCgnL2RlbGV0ZScsIGRlbGV0ZUZsYXNoY2FyZHMpXG4gICAgLy8gLmdldCgnL2VkaXQnLCBlZGl0Rmxhc2hDYXJkcylcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVzXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createFlashcards"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,SADK,EACMC,4BADN,CAAf,C,CAEI;AACA;AACA;;eAEWF,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { createFlashcards, editFlashCards, deleteFlashcards, getFlashcards } from './controller'\n\nconst routes = Router()\n    .post('/create', createFlashcards)\n    // .get('/view', getFlashcards)\n    // .get('/delete', deleteFlashcards)\n    // .get('/edit', editFlashCards)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886604000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listFlashcards = exports.deleteFlashcard = exports.updateFlashcard = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  const flashcardData = {\n    term,\n    definition\n  };\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    flashcardData,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(flashcardData, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", id);\n  return response.sendStatus(501);\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  } // return response.sendStatus(501)\n\n};\n\nexports.listFlashcards = listFlashcards;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY3JlYXRlRmxhc2hjYXJkIiwicmVxdWVzdCIsInJlc3BvbnNlIiwiZGF0YSIsImJvZHkiLCJuYW1lIiwidG9waWMiLCJ0ZXJtIiwiZGVmaW5pdGlvbiIsImZsYXNoY2FyZERhdGEiLCJkYlJlc3BvbnNlIiwic2VuZFN0YXR1cyIsImVyciIsInVwZGF0ZUZsYXNoY2FyZCIsImlkIiwicGFyYW1zIiwiZGVsZXRlRmxhc2hjYXJkIiwibGlzdEZsYXNoY2FyZHMiLCJzZWFyY2hUZXJtcyIsInN0YXR1cyIsInNlbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFTyxNQUFNQSxlQUFlLEdBQUcsT0FBT0MsT0FBUCxFQUFnQkMsUUFBaEIsS0FBNkI7QUFDeEQsdUJBQVEsdUNBQVI7QUFFQSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBV0YsT0FBTyxDQUFDRyxJQUF6QjtBQUVBLHVCQUFRLDBCQUFSLEVBQW9DO0FBQUVELElBQUFBO0FBQUYsR0FBcEM7QUFFQSxRQUFNO0FBQUNFLElBQUFBLElBQUQ7QUFBT0MsSUFBQUEsS0FBUDtBQUFjQyxJQUFBQSxJQUFkO0FBQW9CQyxJQUFBQTtBQUFwQixNQUFrQ0wsSUFBeEM7QUFFQSxRQUFNTSxhQUFhLEdBQUc7QUFBRUYsSUFBQUEsSUFBRjtBQUFRQyxJQUFBQTtBQUFSLEdBQXRCO0FBRUEsdUJBQVEsMEJBQVIsRUFBb0M7QUFBQ0MsSUFBQUEsYUFBRDtBQUFnQkgsSUFBQUEsS0FBaEI7QUFBdUJELElBQUFBO0FBQXZCLEdBQXBDOztBQUVBLE1BQUk7QUFDQSxVQUFNSyxVQUFVLEdBQUcsTUFBTSwyQkFBZ0JELGFBQWhCLEVBQStCSCxLQUEvQixFQUFzQ0QsSUFBdEMsQ0FBekI7QUFDQSx5QkFBUywyQkFBMEJLLFVBQVcsRUFBOUM7O0FBRUEsUUFBSUEsVUFBSixFQUFnQjtBQUNaLDJCQUFRLDZCQUFSO0FBQ0EsYUFBT1IsUUFBUSxDQUFDUyxVQUFULENB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L1VzZXJzL2NoaG8vRG9jdW1lbnRzLzAyX1BlcnNvbmFsLzAxX1BlcnNvbmFsIFByb2plY3RzL2ZsYXNoY2FyZHMtYXBwL2ZsYXNoY2FyZHMtdmF1bHQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dJbmZvLCBsb2dFcnJvciB9IGZyb20gJy4vbG9nZ2luZy9sb2dnZXInXG5pbXBvcnQgeyBpbnNlcnRGbGFzaGNhcmQsIGdldEZsYXNoY2FyZHMsIHVwZGF0ZUZsYXNoY2FyZERlZmluaXRpb24gfSBmcm9tICcuL2RhdGEnXG5cbmV4cG9ydCBjb25zdCBjcmVhdGVGbGFzaGNhcmQgPSBhc3luYyAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBsb2dJbmZvKFwiUmVjZWl2ZWQgcmVxdWVzdCB0byBjcmVhdGUgRmxhc2hjYXJkc1wiKVxuXG4gICAgY29uc3QgeyBkYXRhIH0gPSByZXF1ZXN0LmJvZHlcblxuICAgIGxvZ0luZm8oXCJEYXRhIGluIHJlY2VpdmVkIHJlcXVlc3RcIiwgeyBkYXRhIH0pXG5cbiAgICBjb25zdCB7bmFtZSwgdG9waWMsIHRlcm0sIGRlZmluaXRpb259ID0gZGF0YVxuXG4gICAgY29uc3QgZmxhc2hjYXJkRGF0YSA9IHsgdGVybSwgZGVmaW5pdGlvbiB9XG5cbiAgICBsb2dJbmZvKFwiSW5zZXJ0aW5nIGludG8gZGF0YWJhc2UgXCIsIHtmbGFzaGNhcmREYXRhLCB0b3BpYywgbmFtZX0pXG5cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBkYlJlc3BvbnNlID0gYXdhaXQgaW5zZXJ0Rmxhc2hjYXJkKGZsYXNoY2FyZERhdGEsIHRvcGljLCBuYW1lKVxuICAgICAgICBsb2dJbmZvKGBHb3QgcmVzcG9uc2UgZnJvbSBkYXRhOiAke2RiUmVzcG9uc2V9YClcblxuICAgICAgICBpZiAoZGJSZXNwb25zZSkge1xuICAgICAgICAgICAgbG9nSW5mbyhcIkdvdCBhIHZhbGlkIHJlcG9uc2UgZnJvbSBEQlwiKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoMjAwKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBsb2dFcnJvcihcIk5vIHJlc3BvbnNlIGZyb20gZGIuLi5cIilcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zZW5kU3RhdHVzKDUwMylcbiAgICAgICAgfVxuXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGxvZ0Vycm9yKGVycilcbiAgICB9XG59XG5leHBvcnQgY29uc3QgdXBkYXRlRmxhc2hjYXJkID0gYXN5bmMgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG5cbiAgICBjb25zdCB7IGlkIH0gPSByZXF1ZXN0LnBhcmFtc1xuICAgIGxvZ0luZm8oJ1JlY2VpdmVkIHJlcXVlc3QgdG8gdXBkYXRlIGZsYXNoY2FyZCcsIGlkKVxuXG4gICAgY29uc3QgeyBkYXRhIH0gPSByZXF1ZXN0LmJvZHlcbiAgICBsb2dJbmZvKFwiUmVjZWl2ZWQgZGF0YVwiLCBkYXRhKVxuXG4gICAgY29uc3QgeyBkZWZpbml0aW9uLCB0ZXJtfSA9IGRhdGFcblxuICAgIGlmIChkZWZpbml0aW9uKSB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIGNvbnN0IGRiUmVzcG9uc2UgPSBhd2FpdCB1cGRhdGVGbGFzaGNhcmREZWZpbml0aW9uKGlkLCBkZWZpbml0aW9uKVxuICAgICAgICAgICAgbG9nSW5mbyhgR290IHJlc3BvbnNlIGZyb20gZGF0YTogJHtkYlJlc3BvbnNlfWApXG5cbiAgICAgICAgICAgIGlmIChkYlJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgbG9nSW5mbyhcIkdvdCBhIHZhbGlkIHJlcG9uc2UgZnJvbSBEQlwiKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zZW5kU3RhdHVzKDIwMClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nRXJyb3IoXCJObyByZXNwb25zZSBmcm9tIGRiLi4uXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNTAzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGxvZ0Vycm9yKGVycilcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zZW5kU3RhdHVzKDUwMylcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbiAgICByZXR1cm4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MDApXG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVGbGFzaGNhcmQgPSBhc3luYyAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcblxuICAgIGNvbnN0IHsgaWQgfSA9IHJlcXVlc3QucGFyYW1zXG4gICAgbG9nSW5mbyhcIlJlY2VpdmVkIHJlcXVlc3QgdG8gZGVsZXRlIGZsYXNoY2FyZFwiLCBpZClcblxuXG4gICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNTAxKVxufVxuXG5leHBvcnQgY29uc3QgbGlzdEZsYXNoY2FyZHMgPSBhc3luYyAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcblxuICAgIGxvZ0luZm8oXCJSZWNlaXZlZCByZXF1ZXN0IHRvIGxpc3QgZmxhc2hjYXJkc1wiKVxuXG4gICAgY29uc3QgeyBzZWFyY2hUZXJtcyB9ID0gcmVxdWVzdC5ib2R5XG5cbiAgICBpZiAoIXNlYXJjaFRlcm1zKSB7XG4gICAgICAgIGxvZ0Vycm9yKFwiTm8gc2VhcmNoIHRlcm1zIGZvdW5kIGluIHJlcXVlc3RcIiwgcmVxdWVzdC5ib2R5IClcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNDAwKVxuICAgIH1cblxuICAgIGxvZ0luZm8oXCJHb3Qgc2VhcmNoIHRlcm1zXCIsIHsgc2VhcmNoVGVybXMgfSlcblxuICAgIHRyeSB7XG4gICAgICAgIGxvZ0luZm8oXCJNYWtpbmcgcmVxdWVzdCB0byBkYXRhYmFzZVwiKVxuICAgICAgICBjb25zdCBkYlJlc3BvbnNlID0gYXdhaXQgZ2V0Rmxhc2hjYXJkcyhzZWFyY2hUZXJtcylcbiAgICAgICAgbG9nSW5mbyhgR290IHJlc3BvbnNlIGZyb20gZGF0YTogJHtkYlJlc3BvbnNlfWApXG5cbiAgICAgICAgaWYgKGRiUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGxvZ0luZm8oJ0dvdCBhIGNvb2wgcmVzcG9uc2UgZnJvbSB0aGUgREInKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cygyMDApLnNlbmQoZGJSZXNwb25zZSlcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ0luZm8oXCJObyByZXNwb25zZSByZWNlaXZlZFwiLCBkYlJlc3BvbnNlKVxuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGxvZ0Vycm9yKFwiR290IGFuIGVycm9yXCIsIHtlcnJ9KVxuICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDUwMykuc2VuZChcIkFBQUFBQUFBUkdIXCIpXG4gICAgfVxuXG4gICAgLy8gcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNTAxKVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "flashcardData",
        "dbResponse",
        "sendStatus",
        "err",
        "updateFlashcard",
        "id",
        "params",
        "deleteFlashcard",
        "listFlashcards",
        "searchTerms",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport { insertFlashcard, getFlashcards, updateFlashcardDefinition } from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    const flashcardData = { term, definition }\n\n    logInfo(\"Inserting into database \", {flashcardData, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(flashcardData, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n    }\n}\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term} = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n\n\n\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", id)\n\n\n    return response.sendStatus(501)\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n\n    // return response.sendStatus(501)\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1568724700000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = require(\"./controller\");\n\nconst routes = (0, _express.Router)().post('/create', _controller.createFlashcard).post('/list', _controller.listFlashcards).delete('/delete/:id', _controller.deleteFlashcard).post('/update/:id', _controller.updateFlashcard);\nvar _default = routes;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJwb3N0IiwiY3JlYXRlRmxhc2hjYXJkIiwibGlzdEZsYXNoY2FyZHMiLCJkZWxldGUiLCJkZWxldGVGbGFzaGNhcmQiLCJ1cGRhdGVGbGFzaGNhcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUcsdUJBQ1ZDLElBRFUsQ0FDTCxTQURLLEVBQ01DLDJCQUROLEVBRVZELElBRlUsQ0FFTCxPQUZLLEVBRUlFLDBCQUZKLEVBR1ZDLE1BSFUsQ0FHSCxhQUhHLEVBR1lDLDJCQUhaLEVBSVZKLElBSlUsQ0FJTCxhQUpLLEVBSVVLLDJCQUpWLENBQWY7ZUFNZU4sTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgeyBjcmVhdGVGbGFzaGNhcmQsIHVwZGF0ZUZsYXNoY2FyZCwgZGVsZXRlRmxhc2hjYXJkLCBsaXN0Rmxhc2hjYXJkcyB9IGZyb20gJy4vY29udHJvbGxlcidcblxuY29uc3Qgcm91dGVzID0gUm91dGVyKClcbiAgICAucG9zdCgnL2NyZWF0ZScsIGNyZWF0ZUZsYXNoY2FyZClcbiAgICAucG9zdCgnL2xpc3QnLCBsaXN0Rmxhc2hjYXJkcylcbiAgICAuZGVsZXRlKCcvZGVsZXRlLzppZCcsIGRlbGV0ZUZsYXNoY2FyZClcbiAgICAucG9zdCgnL3VwZGF0ZS86aWQnLCB1cGRhdGVGbGFzaGNhcmQpXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlc1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "post",
        "createFlashcard",
        "listFlashcards",
        "delete",
        "deleteFlashcard",
        "updateFlashcard"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA,MAAMA,MAAM,GAAG,uBACVC,IADU,CACL,SADK,EACMC,2BADN,EAEVD,IAFU,CAEL,OAFK,EAEIE,0BAFJ,EAGVC,MAHU,CAGH,aAHG,EAGYC,2BAHZ,EAIVJ,IAJU,CAIL,aAJK,EAIUK,2BAJV,CAAf;eAMeN,M",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Router } from 'express'\nimport { createFlashcard, updateFlashcard, deleteFlashcard, listFlashcards } from './controller'\n\nconst routes = Router()\n    .post('/create', createFlashcard)\n    .post('/list', listFlashcards)\n    .delete('/delete/:id', deleteFlashcard)\n    .post('/update/:id', updateFlashcard)\n\nexport default routes\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568724713000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listFlashcards = exports.deleteFlashcard = exports.updateFlashcard = exports.createFlashcard = void 0;\n\nvar _logger = require(\"./logging/logger\");\n\nvar _data = require(\"./data\");\n\nconst createFlashcard = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to create Flashcards\");\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Data in received request\", {\n    data\n  });\n  const {\n    name,\n    topic,\n    term,\n    definition\n  } = data;\n  const flashcardData = {\n    term,\n    definition\n  };\n  (0, _logger.logInfo)(\"Inserting into database \", {\n    flashcardData,\n    topic,\n    name\n  });\n\n  try {\n    const dbResponse = await (0, _data.insertFlashcard)(flashcardData, topic, name);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(err);\n  }\n};\n\nexports.createFlashcard = createFlashcard;\n\nconst updateFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)('Received request to update flashcard', id);\n  const {\n    data\n  } = request.body;\n  (0, _logger.logInfo)(\"Received data\", data);\n  const {\n    definition,\n    term\n  } = data;\n\n  if (definition) {\n    try {\n      const dbResponse = await (0, _data.updateFlashcardDefinition)(id, definition);\n      (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n      if (dbResponse) {\n        (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n        return response.sendStatus(200);\n      } else {\n        (0, _logger.logError)(\"No response from db...\");\n        return response.sendStatus(503);\n      }\n    } catch (err) {\n      (0, _logger.logError)(err);\n      return response.sendStatus(503);\n    }\n  }\n\n  return response.sendStatus(400);\n};\n\nexports.updateFlashcard = updateFlashcard;\n\nconst deleteFlashcard = async (request, response) => {\n  const {\n    id\n  } = request.params;\n  (0, _logger.logInfo)(\"Received request to delete flashcard\", {\n    id\n  });\n\n  try {\n    const dbResponse = await (0, _data.removeFlashcard)(id);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)(\"Got a valid reponse from DB\");\n      return response.sendStatus(200);\n    } else {\n      (0, _logger.logError)(\"No response from db...\");\n      return response.sendStatus(503);\n    }\n  } catch (err) {\n    (0, _logger.logError)(\"Got error from the database\", err);\n    (0, _logger.logError)(err);\n    return response.sendStatus(503);\n  }\n};\n\nexports.deleteFlashcard = deleteFlashcard;\n\nconst listFlashcards = async (request, response) => {\n  (0, _logger.logInfo)(\"Received request to list flashcards\");\n  const {\n    searchTerms\n  } = request.body;\n\n  if (!searchTerms) {\n    (0, _logger.logError)(\"No search terms found in request\", request.body);\n    return response.sendStatus(400);\n  }\n\n  (0, _logger.logInfo)(\"Got search terms\", {\n    searchTerms\n  });\n\n  try {\n    (0, _logger.logInfo)(\"Making request to database\");\n    const dbResponse = await (0, _data.getFlashcards)(searchTerms);\n    (0, _logger.logInfo)(`Got response from data: ${dbResponse}`);\n\n    if (dbResponse) {\n      (0, _logger.logInfo)('Got a cool response from the DB');\n      return response.status(200).send(dbResponse);\n    }\n\n    (0, _logger.logInfo)(\"No response received\", dbResponse);\n  } catch (err) {\n    (0, _logger.logError)(\"Got an error\", {\n      err\n    });\n    return response.status(503).send(\"AAAAAAAARGH\");\n  }\n};\n\nexports.listFlashcards = listFlashcards;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "createFlashcard",
        "request",
        "response",
        "data",
        "body",
        "name",
        "topic",
        "term",
        "definition",
        "flashcardData",
        "dbResponse",
        "sendStatus",
        "err",
        "updateFlashcard",
        "id",
        "params",
        "deleteFlashcard",
        "listFlashcards",
        "searchTerms",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { logInfo, logError } from './logging/logger'\nimport {\n    insertFlashcard,\n    getFlashcards,\n    removeFlashcard,\n    updateFlashcardDefinition\n} from './data'\n\nexport const createFlashcard = async (request, response) => {\n    logInfo(\"Received request to create Flashcards\")\n\n    const { data } = request.body\n\n    logInfo(\"Data in received request\", { data })\n\n    const {name, topic, term, definition} = data\n\n    const flashcardData = { term, definition }\n\n    logInfo(\"Inserting into database \", {flashcardData, topic, name})\n\n    try {\n        const dbResponse = await insertFlashcard(flashcardData, topic, name)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        }\n        else{\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n\n    } catch (err) {\n        logError(err)\n    }\n}\nexport const updateFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo('Received request to update flashcard', id)\n\n    const { data } = request.body\n    logInfo(\"Received data\", data)\n\n    const { definition, term} = data\n\n    if (definition) {\n        try{\n            const dbResponse = await updateFlashcardDefinition(id, definition)\n            logInfo(`Got response from data: ${dbResponse}`)\n\n            if (dbResponse) {\n                logInfo(\"Got a valid reponse from DB\")\n                return response.sendStatus(200)\n            } else {\n                logError(\"No response from db...\")\n                return response.sendStatus(503)\n            }\n        } catch (err) {\n            logError(err)\n            return response.sendStatus(503)\n        }\n    }\n    return response.sendStatus(400)\n}\n\nexport const deleteFlashcard = async (request, response) => {\n\n    const { id } = request.params\n    logInfo(\"Received request to delete flashcard\", {id})\n\n    try {\n        const dbResponse = await removeFlashcard(id)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo(\"Got a valid reponse from DB\")\n            return response.sendStatus(200)\n        } else {\n            logError(\"No response from db...\")\n            return response.sendStatus(503)\n        }\n    } catch (err) {\n        logError(\"Got error from the database\", err)\n        logError(err)\n        return response.sendStatus(503)\n    }\n}\n\nexport const listFlashcards = async (request, response) => {\n\n    logInfo(\"Received request to list flashcards\")\n\n    const { searchTerms } = request.body\n\n    if (!searchTerms) {\n        logError(\"No search terms found in request\", request.body )\n        return response.sendStatus(400)\n    }\n\n    logInfo(\"Got search terms\", { searchTerms })\n\n    try {\n        logInfo(\"Making request to database\")\n        const dbResponse = await getFlashcards(searchTerms)\n        logInfo(`Got response from data: ${dbResponse}`)\n\n        if (dbResponse) {\n            logInfo('Got a cool response from the DB')\n            return response.status(200).send(dbResponse)\n        }\n\n        logInfo(\"No response received\", dbResponse)\n    }\n    catch (err) {\n        logError(\"Got an error\", {err})\n        return response.status(503).send(\"AAAAAAAARGH\")\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1568728248000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/logger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "logger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logError = exports.logInfo = exports.default = void 0;\n\nvar _winston = require(\"winston\");\n\nconst diagnosticsFormat = (0, _winston.format)(message => ({ ...message,\n  serviceVersion: process.env.SERVICE_VERSION\n}));\nconst logger = (0, _winston.createLogger)({\n  level: 'info',\n  format: _winston.format.combine(_winston.format.label({\n    label: 'Flashcards App'\n  }), _winston.format.timestamp(), diagnosticsFormat(), _winston.format.json()),\n  transports: [new _winston.transports.Console()]\n});\nvar _default = logger;\nexports.default = _default;\n\nconst logInfo = (message, details) => {\n  logger.info(message, {\n    details\n  });\n};\n\nexports.logInfo = logInfo;\n\nconst logError = (message, details) => {\n  logger.error(message, {\n    details\n  });\n};\n\nexports.logError = logError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2dlci5qcyJdLCJuYW1lcyI6WyJkaWFnbm9zdGljc0Zvcm1hdCIsIm1lc3NhZ2UiLCJzZXJ2aWNlVmVyc2lvbiIsInByb2Nlc3MiLCJlbnYiLCJTRVJWSUNFX1ZFUlNJT04iLCJsb2dnZXIiLCJsZXZlbCIsImZvcm1hdCIsImNvbWJpbmUiLCJsYWJlbCIsInRpbWVzdGFtcCIsImpzb24iLCJ0cmFuc3BvcnRzIiwiQ29uc29sZSIsImxvZ0luZm8iLCJkZXRhaWxzIiwiaW5mbyIsImxvZ0Vycm9yIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQSxNQUFNQSxpQkFBaUIsR0FBRyxxQkFBT0MsT0FBTyxLQUFLLEVBQzNDLEdBQUdBLE9BRHdDO0FBRTNDQyxFQUFBQSxjQUFjLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUZlLENBQUwsQ0FBZCxDQUExQjtBQUtBLE1BQU1DLE1BQU0sR0FBRywyQkFBYTtBQUMxQkMsRUFBQUEsS0FBSyxFQUFFLE1BRG1CO0FBRTFCQyxFQUFBQSxNQUFNLEVBQUVBLGdCQUFPQyxPQUFQLENBQ05ELGdCQUFPRSxLQUFQLENBQWE7QUFBRUEsSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBYixDQURNLEVBRU5GLGdCQUFPRyxTQUFQLEVBRk0sRUFHTlgsaUJBQWlCLEVBSFgsRUFJTlEsZ0JBQU9JLElBQVAsRUFKTSxDQUZrQjtBQVExQkMsRUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBSUEsb0JBQVdDLE9BQWYsRUFBRDtBQVJjLENBQWIsQ0FBZjtlQVdlUixNOzs7QUFFUixNQUFNUyxPQUFPLEdBQUcsQ0FBQ2QsT0FBRCxFQUFVZSxPQUFWLEtBQXNCO0FBQzNDVixFQUFBQSxNQUFNLENBQUNXLElBQVAsQ0FBWWhCLE9BQVosRUFBcUI7QUFBRWUsSUFBQUE7QUFBRixHQUFyQjtBQUNELENBRk07Ozs7QUFJQSxNQUFNRSxRQUFRLEdBQUcsQ0FBQ2pCLE9BQUQsRUFBVWUsT0FBVixLQUFzQjtBQUM1Q1YsRUFBQUEsTUFBTSxDQUFDYSxLQUFQLENBQWFsQixPQUFiLEVBQXNCO0FBQUVlLElBQUFBO0FBQUYsR0FBdEI7QUFDRCxDQUZNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0L2xvZ2dpbmciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVMb2dnZXIsIGZvcm1hdCwgdHJhbnNwb3J0cyB9IGZyb20gJ3dpbnN0b24nXG5cbmNvbnN0IGRpYWdub3N0aWNzRm9ybWF0ID0gZm9ybWF0KG1lc3NhZ2UgPT4gKHtcbiAgLi4ubWVzc2FnZSxcbiAgc2VydmljZVZlcnNpb246IHByb2Nlc3MuZW52LlNFUlZJQ0VfVkVSU0lPTixcbn0pKVxuXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xuICBsZXZlbDogJ2luZm8nLFxuICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgIGZvcm1hdC5sYWJlbCh7IGxhYmVsOiAnRmxhc2hjYXJkcyBBcHAnIH0pLFxuICAgIGZvcm1hdC50aW1lc3RhbXAoKSxcbiAgICBkaWFnbm9zdGljc0Zvcm1hdCgpLFxuICAgIGZvcm1hdC5qc29uKCksXG4gICksXG4gIHRyYW5zcG9ydHM6IFtuZXcgdHJhbnNwb3J0cy5Db25zb2xlKCldLFxufSlcblxuZXhwb3J0IGRlZmF1bHQgbG9nZ2VyXG5cbmV4cG9ydCBjb25zdCBsb2dJbmZvID0gKG1lc3NhZ2UsIGRldGFpbHMpID0+IHtcbiAgbG9nZ2VyLmluZm8obWVzc2FnZSwgeyBkZXRhaWxzIH0pXG59XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlLCBkZXRhaWxzKSA9PiB7XG4gIGxvZ2dlci5lcnJvcihtZXNzYWdlLCB7IGRldGFpbHMgfSlcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "logger.js"
      ],
      "names": [
        "diagnosticsFormat",
        "message",
        "serviceVersion",
        "process",
        "env",
        "SERVICE_VERSION",
        "logger",
        "level",
        "format",
        "combine",
        "label",
        "timestamp",
        "json",
        "transports",
        "Console",
        "logInfo",
        "details",
        "info",
        "logError",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,qBAAOC,OAAO,KAAK,EAC3C,GAAGA,OADwC;AAE3CC,EAAAA,cAAc,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFe,CAAL,CAAd,CAA1B;AAKA,MAAMC,MAAM,GAAG,2BAAa;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,EAAEA,gBAAOC,OAAP,CACND,gBAAOE,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAb,CADM,EAENF,gBAAOG,SAAP,EAFM,EAGNX,iBAAiB,EAHX,EAINQ,gBAAOI,IAAP,EAJM,CAFkB;AAQ1BC,EAAAA,UAAU,EAAE,CAAC,IAAIA,oBAAWC,OAAf,EAAD;AARc,CAAb,CAAf;eAWeR,M;;;AAER,MAAMS,OAAO,GAAG,CAACd,OAAD,EAAUe,OAAV,KAAsB;AAC3CV,EAAAA,MAAM,CAACW,IAAP,CAAYhB,OAAZ,EAAqB;AAAEe,IAAAA;AAAF,GAArB;AACD,CAFM;;;;AAIA,MAAME,QAAQ,GAAG,CAACjB,OAAD,EAAUe,OAAV,KAAsB;AAC5CV,EAAAA,MAAM,CAACa,KAAP,CAAalB,OAAb,EAAsB;AAAEe,IAAAA;AAAF,GAAtB;AACD,CAFM",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import { createLogger, format, transports } from 'winston'\n\nconst diagnosticsFormat = format(message => ({\n  ...message,\n  serviceVersion: process.env.SERVICE_VERSION,\n}))\n\nconst logger = createLogger({\n  level: 'info',\n  format: format.combine(\n    format.label({ label: 'Flashcards App' }),\n    format.timestamp(),\n    diagnosticsFormat(),\n    format.json(),\n  ),\n  transports: [new transports.Console()],\n})\n\nexport default logger\n\nexport const logInfo = (message, details) => {\n  logger.info(message, { details })\n}\n\nexport const logError = (message, details) => {\n  logger.error(message, { details })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567886384000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFlashcardDefinition = exports.getFlashcards = exports.removeFlashcard = exports.insertFlashcard = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst postgresPool = new _pg.Pool({\n  host: 'localhost',\n  user: 'postgres',\n  password: 'testpassword',\n  database: 'postgres'\n});\n\nconst insertFlashcard = async (data, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards(data, topic, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n      values: [data, topic, name]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connectung to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcard where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve({\n        'rowsAffected': 1\n      });\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT id, data from flashcards',\n      values: []\n    };\n    (0, _logger.logInfo)(\"Building query\");\n    Object.entries(searchTerms).some(([key, value], index) => {\n      (0, _logger.logInfo)(\"Concatenating items to search\", {\n        key,\n        value,\n        index\n      });\n      (0, _logger.logInfo)(index == 0);\n\n      if (index == 0 || query.values.length == 0) {\n        if (value === \"\") {\n          (0, _logger.logInfo)(`${key} has value: ${value} - skipping`);\n          return false;\n        }\n\n        query.text += ` WHERE ${key} LIKE $1`;\n        query.values.push(`%${value}%`);\n      } else {\n        if (value === \"\") {\n          (0, _logger.logInfo)(`${key} has value: ${value} - skipping`);\n          return false;\n        }\n\n        query.text += `AND ${key} LIKE $${index}`;\n        query.values.push(`%${value}%`);\n      }\n    });\n    (0, _logger.logInfo)(query);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "postgresPool",
        "Pool",
        "host",
        "user",
        "password",
        "database",
        "insertFlashcard",
        "data",
        "topic",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "rowCount",
        "removeFlashcard",
        "id",
        "getFlashcards",
        "searchTerms",
        "Object",
        "entries",
        "some",
        "key",
        "value",
        "index",
        "length",
        "push",
        "rows",
        "updateFlashcardDefinition",
        "definition"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst postgresPool = new Pool({\n    host: 'localhost',\n    user: 'postgres',\n    password: 'testpassword',\n    database: 'postgres'\n})\n\nexport const insertFlashcard = async (data, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards(data, topic, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n                values: [data, topic, name]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connectung to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcard where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve({'rowsAffected': 1})\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT id, data from flashcards',\n                values: []\n            }\n\n            logInfo(\"Building query\")\n\n            Object.entries(searchTerms).some(([key, value], index) => {\n                logInfo(\"Concatenating items to search\", {key, value, index})\n                logInfo(index == 0)\n                if (index == 0 || query.values.length == 0) {\n                    if (value === \"\"){\n                        logInfo(`${key} has value: ${value} - skipping`)\n                        return false\n                    }\n                    query.text += ` WHERE ${key} LIKE $1`\n                    query.values.push(`%${value}%`)\n                }\n                else {\n                    if (value === \"\"){\n                        logInfo(`${key} has value: ${value} - skipping`)\n                        return false\n                    }\n                    query.text += `AND ${key} LIKE $${index}`\n                    query.values.push(`%${value}%`)\n                }\n            })\n\n            logInfo(query)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568728238000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
        "sourceFileName": "data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFlashcardDefinition = exports.getFlashcards = exports.removeFlashcard = exports.insertFlashcard = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _logger = require(\"./logging/logger\");\n\nconst postgresPool = new _pg.Pool({\n  host: 'localhost',\n  user: 'postgres',\n  password: 'testpassword',\n  database: 'postgres'\n});\n\nconst insertFlashcard = async (data, topic, name) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'INSERT INTO flashcards(data, topic, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n      values: [data, topic, name]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.insertFlashcard = insertFlashcard;\n\nconst removeFlashcard = async id => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Connecting to database to delete flashcard\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'DELETE FROM flashcards where id = $1',\n      values: [id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result);\n    });\n  });\n});\n\nexports.removeFlashcard = removeFlashcard;\n\nconst getFlashcards = async searchTerms => new Promise((resolve, reject) => {\n  (0, _logger.logInfo)(\"Received request to get flashcards\");\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: 'SELECT id, data from flashcards',\n      values: []\n    };\n    (0, _logger.logInfo)(\"Building query\");\n    Object.entries(searchTerms).some(([key, value], index) => {\n      (0, _logger.logInfo)(\"Concatenating items to search\", {\n        key,\n        value,\n        index\n      });\n      (0, _logger.logInfo)(index == 0);\n\n      if (index == 0 || query.values.length == 0) {\n        if (value === \"\") {\n          (0, _logger.logInfo)(`${key} has value: ${value} - skipping`);\n          return false;\n        }\n\n        query.text += ` WHERE ${key} LIKE $1`;\n        query.values.push(`%${value}%`);\n      } else {\n        if (value === \"\") {\n          (0, _logger.logInfo)(`${key} has value: ${value} - skipping`);\n          return false;\n        }\n\n        query.text += `AND ${key} LIKE $${index}`;\n        query.values.push(`%${value}%`);\n      }\n    });\n    (0, _logger.logInfo)(query);\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)('Error occurred', queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      (0, _logger.logInfo)(\"Received successfuly result\", {\n        result\n      });\n      resolve(result.rows);\n    });\n  });\n});\n\nexports.getFlashcards = getFlashcards;\n\nconst updateFlashcardDefinition = async (id, definition) => new Promise((resolve, reject) => {\n  postgresPool.connect((connectError, client, release) => {\n    if (connectError) {\n      (0, _logger.logError)(\"Error connecting to the DB\", connectError.stack);\n      reject(new Error(\"Connection sadness\"));\n      return;\n    }\n\n    const query = {\n      text: `\n                    UPDATE flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n      values: [definition, id]\n    };\n    client.query(query, (queryError, result) => {\n      release();\n\n      if (queryError) {\n        (0, _logger.logError)(queryError.stack);\n        reject(new Error(\"Postgres sadness :(\"));\n        return;\n      }\n\n      resolve(result.rowCount);\n    });\n  });\n});\n\nexports.updateFlashcardDefinition = updateFlashcardDefinition;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsicG9zdGdyZXNQb29sIiwiUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImluc2VydEZsYXNoY2FyZCIsImRhdGEiLCJ0b3BpYyIsIm5hbWUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbm5lY3QiLCJjb25uZWN0RXJyb3IiLCJjbGllbnQiLCJyZWxlYXNlIiwic3RhY2siLCJFcnJvciIsInF1ZXJ5IiwidGV4dCIsInZhbHVlcyIsInF1ZXJ5RXJyb3IiLCJyZXN1bHQiLCJyb3dDb3VudCIsInJlbW92ZUZsYXNoY2FyZCIsImlkIiwiZ2V0Rmxhc2hjYXJkcyIsInNlYXJjaFRlcm1zIiwiT2JqZWN0IiwiZW50cmllcyIsInNvbWUiLCJrZXkiLCJ2YWx1ZSIsImluZGV4IiwibGVuZ3RoIiwicHVzaCIsInJvd3MiLCJ1cGRhdGVGbGFzaGNhcmREZWZpbml0aW9uIiwiZGVmaW5pdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBLE1BQU1BLFlBQVksR0FBRyxJQUFJQyxRQUFKLENBQVM7QUFDMUJDLEVBQUFBLElBQUksRUFBRSxXQURvQjtBQUUxQkMsRUFBQUEsSUFBSSxFQUFFLFVBRm9CO0FBRzFCQyxFQUFBQSxRQUFRLEVBQUUsY0FIZ0I7QUFJMUJDLEVBQUFBLFFBQVEsRUFBRTtBQUpnQixDQUFULENBQXJCOztBQU9PLE1BQU1DLGVBQWUsR0FBRyxPQUFPQyxJQUFQLEVBQWFDLEtBQWIsRUFBb0JDLElBQXBCLEtBQTZCLElBQUlDLE9BQUosQ0FDeEQsQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ2pCWixFQUFBQSxZQUFZLENBQUNhLE9BQWIsQ0FBcUIsQ0FBQ0MsWUFBRCxFQUFlQyxNQUFmLEVBQXVCQyxPQUF2QixLQUFtQztBQUNwRCxRQUFJRixZQUFKLEVBQWtCO0FBQ2QsNEJBQVMsNEJBQVQsRUFBdUNBLFlBQVksQ0FBQ0csS0FBcEQ7QUFD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QUFJN0IsT0FBSixDQUMvRCxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDakJaLEVBQUFBLFlBQVksQ0FBQ2EsT0FBYixDQUFxQixDQUFDQyxZQUFELEVBQWVDLE1BQWYsRUFBdUJDLE9BQXZCLEtBQW1DO0FBQ3BELFFBQUlGLFlBQUosRUFBa0I7QUFDZCw0QkFBUyw0QkFBVCxFQUF1Q0EsWUFBWSxDQUFDRyxLQUFwRDtBQUNBTCxNQUFBQSxNQUFNLENBQUMsSUFBSU0sS0FBSixDQUFVLG9CQUFWLENBQUQsQ0FBTjtBQUNBO0FBQ0g7O0FBRUQsVUFBTUMsS0FBSyxHQUFHO0FBQ1ZDLE1BQUFBLElBQUksRUFBRzs7OztrQ0FERztBQU1WQyxNQUFBQSxNQUFNLEVBQUUsQ0FBQ2tCLFVBQUQsRUFBYWIsRUFBYjtBQU5FLEtBQWQ7QUFVQVgsSUFBQUEsTUFBTSxDQUFDSSxLQUFQLENBQWFBLEtBQWIsRUFBb0IsQ0FBQ0csVUFBRCxFQUFhQyxNQUFiLEtBQXdCO0FBQ3hDUCxNQUFBQSxPQUFPOztBQUNQLFVBQUlNLFVBQUosRUFBZ0I7QUFDWiw4QkFBU0EsVUFBVSxDQUFDTCxLQUFwQjtBQUNBTCxRQUFBQSxNQUFNLENBQUMsSUFBSU0sS0FBSixDQUFVLHFCQUFWLENBQUQsQ0FBTjtBQUNBO0FBQ0g7O0FBQ0RQLE1BQUFBLE9BQU8sQ0FBQ1ksTUFBTSxDQUFDQyxRQUFSLENBQVA7QUFDSCxLQVJEO0FBU0gsR0ExQkQ7QUEyQkgsQ0E3QjhELENBQTVEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGhvL0RvY3VtZW50cy8wMl9QZXJzb25hbC8wMV9QZXJzb25hbCBQcm9qZWN0cy9mbGFzaGNhcmRzLWFwcC9mbGFzaGNhcmRzLXZhdWx0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9vbCB9IGZyb20gJ3BnJ1xuaW1wb3J0IHsgbG9nSW5mbywgbG9nRXJyb3IgfSBmcm9tICcuL2xvZ2dpbmcvbG9nZ2VyJ1xuXG5jb25zdCBwb3N0Z3Jlc1Bvb2wgPSBuZXcgUG9vbCh7XG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgdXNlcjogJ3Bvc3RncmVzJyxcbiAgICBwYXNzd29yZDogJ3Rlc3RwYXNzd29yZCcsXG4gICAgZGF0YWJhc2U6ICdwb3N0Z3Jlcydcbn0pXG5cbmV4cG9ydCBjb25zdCBpbnNlcnRGbGFzaGNhcmQgPSBhc3luYyAoZGF0YSwgdG9waWMsIG5hbWUpID0+IG5ldyBQcm9taXNlKFxuICAgIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgcG9zdGdyZXNQb29sLmNvbm5lY3QoKGNvbm5lY3RFcnJvciwgY2xpZW50LCByZWxlYXNlKSA9PiB7XG4gICAgICAgICAgICBpZiAoY29ubmVjdEVycm9yKSB7XG4gICAgICAgICAgICAgICAgbG9nRXJyb3IoXCJFcnJvciBjb25uZWN0aW5nIHRvIHRoZSBEQlwiLCBjb25uZWN0RXJyb3Iuc3RhY2spXG4gICAgICAgICAgICAgICAgcmVqZWN0KCBuZXcgRXJyb3IoXCJDb25uZWN0aW9uIHNhZG5lc3NcIikpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0ge1xuICAgICAgICAgICAgICAgIHRleHQ6ICdJTlNFUlQgSU5UTyBmbGFzaGNhcmRzKGRhdGEsIHRvcGljLCBuYW1lLCBjcmVhdGVkLCB1cGRhdGVkKSBWQUxVRVMoJDEsICQyLCAkMywgTk9XKCksIE5PVygpKScsXG4gICAgICAgICAgICAgICAgdmFsdWVzOiBbZGF0YSwgdG9waWMsIG5hbWVdXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNsaWVudC5xdWVyeShxdWVyeSwgKHF1ZXJ5RXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbGVhc2UoKVxuICAgICAgICAgICAgICAgIGlmIChxdWVyeUVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJQb3N0Z3JlcyBzYWRuZXNzIDooXCIpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQucm93Q291bnQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbilcblxuZXhwb3J0IGNvbnN0IHJlbW92ZUZsYXNoY2FyZCA9IGFzeW5jIChpZCkgPT4gbmV3IFByb21pc2UoXG4gICAgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBsb2dJbmZvKFwiQ29ubmVjdGluZyB0byBkYXRhYmFzZSB0byBkZWxldGUgZmxhc2hjYXJkXCIpXG4gICAgICAgIHBvc3RncmVzUG9vbC5jb25uZWN0KChjb25uZWN0RXJyb3IsIGNsaWVudCwgcmVsZWFzZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGNvbm5lY3RFcnJvcikge1xuICAgICAgICAgICAgICAgIGxvZ0Vycm9yKFwiRXJyb3IgY29ubmVjdGluZyB0byB0aGUgREJcIiwgY29ubmVjdEVycm9yLnN0YWNrKVxuICAgICAgICAgICAgICAgIHJlamVjdCggbmV3IEVycm9yKFwiQ29ubmVjdGlvbiBzYWRuZXNzXCIpKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBxdWVyeSA9IHtcbiAgICAgICAgICAgICAgICB0ZXh0OiAnREVMRVRFIEZST00gZmxhc2hjYXJkcyB3aGVyZSBpZCA9ICQxJyxcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IFtpZF1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2xpZW50LnF1ZXJ5KHF1ZXJ5LCAocXVlcnlFcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVsZWFzZSgpXG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5RXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9nRXJyb3IocXVlcnlFcnJvci5zdGFjaylcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIlBvc3RncmVzIHNhZG5lc3MgOihcIikpXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuKVxuXG5leHBvcnQgY29uc3QgZ2V0Rmxhc2hjYXJkcyA9IGFzeW5jIChzZWFyY2hUZXJtcykgPT4gbmV3IFByb21pc2UoXG4gICAgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBsb2dJbmZvKFwiUmVjZWl2ZWQgcmVxdWVzdCB0byBnZXQgZmxhc2hjYXJkc1wiKVxuICAgICAgICBwb3N0Z3Jlc1Bvb2wuY29ubmVjdCgoY29ubmVjdEVycm9yLCBjbGllbnQsIHJlbGVhc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChjb25uZWN0RXJyb3IpIHtcbiAgICAgICAgICAgICAgICBsb2dFcnJvcihcIkVycm9yIGNvbm5lY3RpbmcgdG8gdGhlIERCXCIsIGNvbm5lY3RFcnJvci5zdGFjaylcbiAgICAgICAgICAgICAgICByZWplY3QoIG5ldyBFcnJvcihcIkNvbm5lY3Rpb24gc2FkbmVzc1wiKSlcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgcXVlcnkgPSB7XG4gICAgICAgICAgICAgICAgdGV4dDogJ1NFTEVDVCBpZCwgZGF0YSBmcm9tIGZsYXNoY2FyZHMnLFxuICAgICAgICAgICAgICAgIHZhbHVlczogW11cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbG9nSW5mbyhcIkJ1aWxkaW5nIHF1ZXJ5XCIpXG5cbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHNlYXJjaFRlcm1zKS5zb21lKChba2V5LCB2YWx1ZV0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgbG9nSW5mbyhcIkNvbmNhdGVuYXRpbmcgaXRlbXMgdG8gc2VhcmNoXCIsIHtrZXksIHZhbHVlLCBpbmRleH0pXG4gICAgICAgICAgICAgICAgbG9nSW5mbyhpbmRleCA9PSAwKVxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PSAwIHx8IHF1ZXJ5LnZhbHVlcy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09IFwiXCIpe1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nSW5mbyhgJHtrZXl9IGhhcyB2YWx1ZTogJHt2YWx1ZX0gLSBza2lwcGluZ2ApXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBxdWVyeS50ZXh0ICs9IGAgV0hFUkUgJHtrZXl9IExJS0UgJDFgXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnZhbHVlcy5wdXNoKGAlJHt2YWx1ZX0lYClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gXCJcIil7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dJbmZvKGAke2tleX0gaGFzIHZhbHVlOiAke3ZhbHVlfSAtIHNraXBwaW5nYClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnRleHQgKz0gYEFORCAke2tleX0gTElLRSAkJHtpbmRleH1gXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5LnZhbHVlcy5wdXNoKGAlJHt2YWx1ZX0lYClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBsb2dJbmZvKHF1ZXJ5KVxuXG4gICAgICAgICAgICBjbGllbnQucXVlcnkocXVlcnksIChxdWVyeUVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICByZWxlYXNlKClcbiAgICAgICAgICAgICAgICBpZiAocXVlcnlFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBsb2dFcnJvcignRXJyb3Igb2NjdXJyZWQnLCBxdWVyeUVycm9yLnN0YWNrKVxuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiUG9zdGdyZXMgc2FkbmVzcyA6KFwiKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxvZ0luZm8oXCJSZWNlaXZlZCBzdWNjZXNzZnVseSByZXN1bHRcIiwge3Jlc3VsdH0gKVxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0LnJvd3MpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbilcblxuXG5leHBvcnQgY29uc3QgdXBkYXRlRmxhc2hjYXJkRGVmaW5pdGlvbiA9IGFzeW5jIChpZCwgZGVmaW5pdGlvbikgPT4gbmV3IFByb21pc2UoXG4gICAgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBwb3N0Z3Jlc1Bvb2wuY29ubmVjdCgoY29ubmVjdEVycm9yLCBjbGllbnQsIHJlbGVhc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChjb25uZWN0RXJyb3IpIHtcbiAgICAgICAgICAgICAgICBsb2dFcnJvcihcIkVycm9yIGNvbm5lY3RpbmcgdG8gdGhlIERCXCIsIGNvbm5lY3RFcnJvci5zdGFjaylcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKFwiQ29ubmVjdGlvbiBzYWRuZXNzXCIpKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBxdWVyeSA9IHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBgXG4gICAgICAgICAgICAgICAgICAgIFVQREFURSBmbGFzaGNhcmRzXG4gICAgICAgICAgICAgICAgICAgIFNFVCBkYXRhID0ganNvbmJfc2V0KGRhdGEsIFxcJ3tkZWZpbml0aW9ufVxcJywgdG9fanNvbmIoJDE6OnRleHQpKSxcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlZCA9IE5PVygpXG4gICAgICAgICAgICAgICAgICAgIFdIRVJFIGlkID0gJDJgLFxuICAgICAgICAgICAgICAgIHZhbHVlczogW2RlZmluaXRpb24sIGlkXVxuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIGNsaWVudC5xdWVyeShxdWVyeSwgKHF1ZXJ5RXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbGVhc2UoKVxuICAgICAgICAgICAgICAgIGlmIChxdWVyeUVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ0Vycm9yKHF1ZXJ5RXJyb3Iuc3RhY2spXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJQb3N0Z3JlcyBzYWRuZXNzIDooXCIpKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQucm93Q291bnQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbilcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "postgresPool",
        "Pool",
        "host",
        "user",
        "password",
        "database",
        "insertFlashcard",
        "data",
        "topic",
        "name",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "connectError",
        "client",
        "release",
        "stack",
        "Error",
        "query",
        "text",
        "values",
        "queryError",
        "result",
        "rowCount",
        "removeFlashcard",
        "id",
        "getFlashcards",
        "searchTerms",
        "Object",
        "entries",
        "some",
        "key",
        "value",
        "index",
        "length",
        "push",
        "rows",
        "updateFlashcardDefinition",
        "definition"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourcesContent": [
        "import { Pool } from 'pg'\nimport { logInfo, logError } from './logging/logger'\n\nconst postgresPool = new Pool({\n    host: 'localhost',\n    user: 'postgres',\n    password: 'testpassword',\n    database: 'postgres'\n})\n\nexport const insertFlashcard = async (data, topic, name) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'INSERT INTO flashcards(data, topic, name, created, updated) VALUES($1, $2, $3, NOW(), NOW())',\n                values: [data, topic, name]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n\nexport const removeFlashcard = async (id) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Connecting to database to delete flashcard\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'DELETE FROM flashcards where id = $1',\n                values: [id]\n            }\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result)\n            })\n        })\n    }\n)\n\nexport const getFlashcards = async (searchTerms) => new Promise(\n    (resolve, reject) => {\n        logInfo(\"Received request to get flashcards\")\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject( new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: 'SELECT id, data from flashcards',\n                values: []\n            }\n\n            logInfo(\"Building query\")\n\n            Object.entries(searchTerms).some(([key, value], index) => {\n                logInfo(\"Concatenating items to search\", {key, value, index})\n                logInfo(index == 0)\n                if (index == 0 || query.values.length == 0) {\n                    if (value === \"\"){\n                        logInfo(`${key} has value: ${value} - skipping`)\n                        return false\n                    }\n                    query.text += ` WHERE ${key} LIKE $1`\n                    query.values.push(`%${value}%`)\n                }\n                else {\n                    if (value === \"\"){\n                        logInfo(`${key} has value: ${value} - skipping`)\n                        return false\n                    }\n                    query.text += `AND ${key} LIKE $${index}`\n                    query.values.push(`%${value}%`)\n                }\n            })\n\n            logInfo(query)\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError('Error occurred', queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                logInfo(\"Received successfuly result\", {result} )\n                resolve(result.rows)\n            })\n        })\n    }\n)\n\n\nexport const updateFlashcardDefinition = async (id, definition) => new Promise(\n    (resolve, reject) => {\n        postgresPool.connect((connectError, client, release) => {\n            if (connectError) {\n                logError(\"Error connecting to the DB\", connectError.stack)\n                reject(new Error(\"Connection sadness\"))\n                return\n            }\n\n            const query = {\n                text: `\n                    UPDATE flashcards\n                    SET data = jsonb_set(data, \\'{definition}\\', to_jsonb($1::text)),\n                    updated = NOW()\n                    WHERE id = $2`,\n                values: [definition, id]\n            }\n\n\n            client.query(query, (queryError, result) => {\n                release()\n                if (queryError) {\n                    logError(queryError.stack)\n                    reject(new Error(\"Postgres sadness :(\"))\n                    return\n                }\n                resolve(result.rowCount)\n            })\n        })\n    }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568728309000
  },
  "{\"sourceRoot\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"filename\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault\",\"plugins\":[{\"key\":\"module-resolver\",\"visitor\":{\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"root\":[\"./src\"]}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "module-resolver",
          "visitor": {
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "root": [
              "./src"
            ]
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-import-meta",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "plugins": [
          "dynamicImport",
          "importMeta",
          "classProperties",
          "classPrivateProperties",
          "jsonStrings",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging/requestLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
        "sourceFileName": "requestLogger.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _morganJson = _interopRequireDefault(require(\"morgan-json\"));\n\nvar _logger = _interopRequireDefault(require(\"./logger\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst morganStream = {\n  write: data => {\n    const details = JSON.parse(data);\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`;\n\n    if (details.status >= 500) {\n      _logger.default.error(shortMessage, {\n        details\n      });\n    } else {\n      _logger.default.info(shortMessage, {\n        details\n      });\n    }\n  }\n};\n/* eslint-disable camelcase */\n\n/* Disabled as must match logging standard */\n\nconst morganFormat = (0, _morganJson.default)({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent'\n});\n/* eslint-enable camelcase */\n\nvar _default = (0, _morgan.default)(morganFormat, {\n  stream: morganStream\n});\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2dnZXIuanMiXSwibmFtZXMiOlsibW9yZ2FuU3RyZWFtIiwid3JpdGUiLCJkYXRhIiwiZGV0YWlscyIsIkpTT04iLCJwYXJzZSIsInNob3J0TWVzc2FnZSIsInJlcXVlc3RfbWV0aG9kIiwicmVxdWVzdF91cmwiLCJzdGF0dXMiLCJyZXNwb25zZV90aW1lIiwibG9nZ2VyIiwiZXJyb3IiLCJpbmZvIiwibW9yZ2FuRm9ybWF0IiwicmVtb3RlX2FkZHIiLCJyZW1vdGVfdXNlciIsImJvZHlfYnl0ZXNfc2VudCIsImh0dHBfdmVyc2lvbiIsImh0dHBfcmVmZXJyZXIiLCJodHRwX3VzZXJfYWdlbnQiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBSTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFHQyxJQUFELElBQVU7QUFDZixVQUFNQyxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXSCxJQUFYLENBQWhCO0FBQ0EsVUFBTUksWUFBWSxHQUFJLEdBQUVILE9BQU8sQ0FBQ0ksY0FBZSxJQUFHSixPQUFPLENBQUNLLFdBQVksSUFBR0wsT0FBTyxDQUFDTSxNQUFPLE9BQU1OLE9BQU8sQ0FBQ08sYUFBYyxLQUFwSDs7QUFFQSxRQUFJUCxPQUFPLENBQUNNLE1BQVIsSUFBa0IsR0FBdEIsRUFBMkI7QUFDekJFLHNCQUFPQyxLQUFQLENBQWFOLFlBQWIsRUFBMkI7QUFBRUgsUUFBQUE7QUFBRixPQUEzQjtBQUNELEtBRkQsTUFFTztBQUNMUSxzQkFBT0UsSUFBUCxDQUFZUCxZQUFaLEVBQTBCO0FBQUVILFFBQUFBO0FBQUYsT0FBMUI7QUFDRDtBQUNGO0FBVm1CLENBQXRCO0FBWUE7O0FBQ0E7O0FBQ0EsTUFBTVcsWUFBWSxHQUFHLHlCQUFXO0FBQzlCQyxFQUFBQSxXQUFXLEVBQUUsY0FEaUI7QUFFOUJDLEVBQUFBLFdBQVcsRUFBRSxjQUZpQjtBQUc5QkMsRUFBQUEsZUFBZSxFQUFFLHNCQUhhO0FBSTlCUCxFQUFBQSxhQUFhLEVBQUUsZ0JBSmU7QUFLOUJELEVBQUFBLE1BQU0sRUFBRSxTQUxzQjtBQU05QkYsRUFBQUEsY0FBYyxFQUFFLFNBTmM7QUFPOUJDLEVBQUFBLFdBQVcsRUFBRSxNQVBpQjtBQVE5QlUsRUFBQUEsWUFBWSxFQUFFLGVBUmdCO0FBUzlCQyxFQUFBQSxhQUFhLEVBQUUsV0FUZTtBQVU5QkMsRUFBQUEsZUFBZSxFQUFFO0FBVmEsQ0FBWCxDQUFyQjtBQVlBOztlQUVlLHFCQUFPTixZQUFQLEVBQXNCO0FBQUVPLEVBQUFBLE1BQU0sRUFBRXJCO0FBQVYsQ0FBdEIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY2hoby9Eb2N1bWVudHMvMDJfUGVyc29uYWwvMDFfUGVyc29uYWwgUHJvamVjdHMvZmxhc2hjYXJkcy1hcHAvZmxhc2hjYXJkcy12YXVsdC9sb2dnaW5nIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgbW9yZ2FuSnNvbiBmcm9tICdtb3JnYW4tanNvbidcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInXG5cbmNvbnN0IG1vcmdhblN0cmVhbSA9ICh7XG4gIHdyaXRlOiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGRldGFpbHMgPSBKU09OLnBhcnNlKGRhdGEpXG4gICAgY29uc3Qgc2hvcnRNZXNzYWdlID0gYCR7ZGV0YWlscy5yZXF1ZXN0X21ldGhvZH0gJHtkZXRhaWxzLnJlcXVlc3RfdXJsfSAke2RldGFpbHMuc3RhdHVzfSBpbiAke2RldGFpbHMucmVzcG9uc2VfdGltZX0gbXNgXG5cbiAgICBpZiAoZGV0YWlscy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICBsb2dnZXIuZXJyb3Ioc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmluZm8oc2hvcnRNZXNzYWdlLCB7IGRldGFpbHMgfSlcbiAgICB9XG4gIH0sXG59KVxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4vKiBEaXNhYmxlZCBhcyBtdXN0IG1hdGNoIGxvZ2dpbmcgc3RhbmRhcmQgKi9cbmNvbnN0IG1vcmdhbkZvcm1hdCA9IG1vcmdhbkpzb24oe1xuICByZW1vdGVfYWRkcjogJzpyZW1vdGUtYWRkcicsXG4gIHJlbW90ZV91c2VyOiAnOnJlbW90ZS11c2VyJyxcbiAgYm9keV9ieXRlc19zZW50OiAnOnJlc1tjb250ZW50LWxlbmd0aF0nLFxuICByZXNwb25zZV90aW1lOiAnOnJlc3BvbnNlLXRpbWUnLFxuICBzdGF0dXM6ICc6c3RhdHVzJyxcbiAgcmVxdWVzdF9tZXRob2Q6ICc6bWV0aG9kJyxcbiAgcmVxdWVzdF91cmw6ICc6dXJsJyxcbiAgaHR0cF92ZXJzaW9uOiAnOmh0dHAtdmVyc2lvbicsXG4gIGh0dHBfcmVmZXJyZXI6ICc6cmVmZXJyZXInLFxuICBodHRwX3VzZXJfYWdlbnQ6ICc6dXNlci1hZ2VudCcsXG59KVxuLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cblxuZXhwb3J0IGRlZmF1bHQgbW9yZ2FuKG1vcmdhbkZvcm1hdCwgKHsgc3RyZWFtOiBtb3JnYW5TdHJlYW0gfSkpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "requestLogger.js"
      ],
      "names": [
        "morganStream",
        "write",
        "data",
        "details",
        "JSON",
        "parse",
        "shortMessage",
        "request_method",
        "request_url",
        "status",
        "response_time",
        "logger",
        "error",
        "info",
        "morganFormat",
        "remote_addr",
        "remote_user",
        "body_bytes_sent",
        "http_version",
        "http_referrer",
        "http_user_agent",
        "stream"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAI;AACpBC,EAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;AACA,UAAMI,YAAY,GAAI,GAAEH,OAAO,CAACI,cAAe,IAAGJ,OAAO,CAACK,WAAY,IAAGL,OAAO,CAACM,MAAO,OAAMN,OAAO,CAACO,aAAc,KAApH;;AAEA,QAAIP,OAAO,CAACM,MAAR,IAAkB,GAAtB,EAA2B;AACzBE,sBAAOC,KAAP,CAAaN,YAAb,EAA2B;AAAEH,QAAAA;AAAF,OAA3B;AACD,KAFD,MAEO;AACLQ,sBAAOE,IAAP,CAAYP,YAAZ,EAA0B;AAAEH,QAAAA;AAAF,OAA1B;AACD;AACF;AAVmB,CAAtB;AAYA;;AACA;;AACA,MAAMW,YAAY,GAAG,yBAAW;AAC9BC,EAAAA,WAAW,EAAE,cADiB;AAE9BC,EAAAA,WAAW,EAAE,cAFiB;AAG9BC,EAAAA,eAAe,EAAE,sBAHa;AAI9BP,EAAAA,aAAa,EAAE,gBAJe;AAK9BD,EAAAA,MAAM,EAAE,SALsB;AAM9BF,EAAAA,cAAc,EAAE,SANc;AAO9BC,EAAAA,WAAW,EAAE,MAPiB;AAQ9BU,EAAAA,YAAY,EAAE,eARgB;AAS9BC,EAAAA,aAAa,EAAE,WATe;AAU9BC,EAAAA,eAAe,EAAE;AAVa,CAAX,CAArB;AAYA;;eAEe,qBAAON,YAAP,EAAsB;AAAEO,EAAAA,MAAM,EAAErB;AAAV,CAAtB,C",
      "sourceRoot": "/Users/chho/Documents/02_Personal/01_Personal Projects/flashcards-app/flashcards-vault/logging",
      "sourcesContent": [
        "import morgan from 'morgan'\nimport morganJson from 'morgan-json'\nimport logger from './logger'\n\nconst morganStream = ({\n  write: (data) => {\n    const details = JSON.parse(data)\n    const shortMessage = `${details.request_method} ${details.request_url} ${details.status} in ${details.response_time} ms`\n\n    if (details.status >= 500) {\n      logger.error(shortMessage, { details })\n    } else {\n      logger.info(shortMessage, { details })\n    }\n  },\n})\n/* eslint-disable camelcase */\n/* Disabled as must match logging standard */\nconst morganFormat = morganJson({\n  remote_addr: ':remote-addr',\n  remote_user: ':remote-user',\n  body_bytes_sent: ':res[content-length]',\n  response_time: ':response-time',\n  status: ':status',\n  request_method: ':method',\n  request_url: ':url',\n  http_version: ':http-version',\n  http_referrer: ':referrer',\n  http_user_agent: ':user-agent',\n})\n/* eslint-enable camelcase */\n\nexport default morgan(morganFormat, ({ stream: morganStream }))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567852597000
  }
}